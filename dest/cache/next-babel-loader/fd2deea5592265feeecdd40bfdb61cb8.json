{"ast":null,"code":"import _regeneratorRuntime from \"E:/MyGit/github-demo/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\utils\\\\with-redux-app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** 这个HOC的意义\r\n * 因为服务端执行了getInitialProps之后，返回给客户端的是序列化的字符串\r\n * redux里面有很多方法，不适合序列化存储\r\n * 所以在getInitialProps之后返回initialReduxState\r\n * 再通过initialReduxState去创建完整的store\r\n * 但是为了性能，客户端每次执行该方法的时候都去找一下window对象里面时候已经有了store\r\n */\nimport React from 'react';\nimport initializeStore from '../redux/store';\nvar isServer = false;\nvar __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'; // 存储在window中表示window已经有了store\n\nfunction getOrCreateStore(initialState) {\n  if (isServer) {\n    // 服务端执行时都重新创建一个store\n    return initializeStore(initialState);\n  }\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nvar withRedux = function withRedux(Comp) {\n  function withReduxApp(props) {\n    var Component = props.Component,\n        pageProps = props.pageProps,\n        initialReduxState = props.initialReduxState,\n        rest = _objectWithoutProperties(props, [\"Component\", \"pageProps\", \"initialReduxState\"]);\n\n    return /*#__PURE__*/_jsxDEV(Comp, _objectSpread({\n      Component: Component,\n      pageProps: pageProps,\n      reduxStore: getOrCreateStore(initialReduxState)\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  withReduxApp.getInitialProps = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n      var reduxStore, req, session, appProps;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!isServer) {\n                _context.next = 14;\n                break;\n              }\n\n              req = ctx.ctx.req;\n              session = req.session;\n\n              if (!(session && session.userInfo)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 6;\n              return getOrCreateStore({\n                user: session.userInfo\n              });\n\n            case 6:\n              reduxStore = _context.sent;\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.next = 11;\n              return getOrCreateStore();\n\n            case 11:\n              reduxStore = _context.sent;\n\n            case 12:\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.next = 16;\n              return getOrCreateStore();\n\n            case 16:\n              reduxStore = _context.sent;\n\n            case 17:\n              ctx.reduxStore = reduxStore;\n              appProps = {};\n\n              if (!(typeof Comp.getInitialProps === 'function')) {\n                _context.next = 23;\n                break;\n              }\n\n              _context.next = 22;\n              return Comp.getInitialProps(ctx);\n\n            case 22:\n              appProps = _context.sent;\n\n            case 23:\n              return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, appProps), {}, {\n                initialReduxState: reduxStore.getState()\n              }));\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return withReduxApp;\n};\n\nexport default withRedux;","map":{"version":3,"sources":["E:/MyGit/github-demo/utils/with-redux-app.js"],"names":["React","initializeStore","isServer","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","withRedux","Comp","withReduxApp","props","Component","pageProps","initialReduxState","rest","getInitialProps","ctx","req","session","userInfo","user","reduxStore","appProps","getState"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AAEA,IAAMC,QAAQ,QAAd;AACA,IAAMC,oBAAoB,GAAG,sBAA7B,C,CAAqD;;AAErD,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC,MAAIH,QAAJ,EAAc;AACZ;AACA,WAAOD,eAAe,CAACI,YAAD,CAAtB;AACD;;AACD,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AACjCG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BF,eAAe,CAACI,YAAD,CAA9C;AACD;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACD;;AAED,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAAAC,IAAI,EAAI;AACxB,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,QACnBC,SADmB,GACkCD,KADlC,CACnBC,SADmB;AAAA,QACRC,SADQ,GACkCF,KADlC,CACRE,SADQ;AAAA,QACGC,iBADH,GACkCH,KADlC,CACGG,iBADH;AAAA,QACyBC,IADzB,4BACkCJ,KADlC;;AAE3B,wBACE,QAAC,IAAD;AACE,MAAA,SAAS,EAAEC,SADb;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,UAAU,EAAER,gBAAgB,CAACS,iBAAD;AAH9B,OAIMC,IAJN;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAEDL,EAAAA,YAAY,CAACM,eAAb;AAAA,wEAA+B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGzBd,QAHyB;AAAA;AAAA;AAAA;;AAKlBe,cAAAA,GALkB,GAMvBD,GANuB,CAKzBA,GALyB,CAKlBC,GALkB;AAOnBC,cAAAA,OAPmB,GAOPD,GAPO,CAOnBC,OAPmB;;AAAA,oBAQvBA,OAAO,IAAIA,OAAO,CAACC,QARI;AAAA;AAAA;AAAA;;AAAA;AAAA,qBASNf,gBAAgB,CAAC;AAClCgB,gBAAAA,IAAI,EAAEF,OAAO,CAACC;AADoB,eAAD,CATV;;AAAA;AASzBE,cAAAA,UATyB;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAaNjB,gBAAgB,EAbV;;AAAA;AAazBiB,cAAAA,UAbyB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAgBRjB,gBAAgB,EAhBR;;AAAA;AAgB3BiB,cAAAA,UAhB2B;;AAAA;AAmB7BL,cAAAA,GAAG,CAACK,UAAJ,GAAiBA,UAAjB;AAEIC,cAAAA,QArByB,GAqBd,EArBc;;AAAA,oBAsBzB,OAAOd,IAAI,CAACO,eAAZ,KAAgC,UAtBP;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAuBVP,IAAI,CAACO,eAAL,CAAqBC,GAArB,CAvBU;;AAAA;AAuB3BM,cAAAA,QAvB2B;;AAAA;AAAA,+EA2BxBA,QA3BwB;AA4B3BT,gBAAAA,iBAAiB,EAAEQ,UAAU,CAACE,QAAX;AA5BQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B;;AAAA;AAAA;AAAA;AAAA;;AA+BA,SAAOd,YAAP;AACD,CA7CD;;AA+CA,eAAeF,SAAf","sourcesContent":["/** 这个HOC的意义\r\n * 因为服务端执行了getInitialProps之后，返回给客户端的是序列化的字符串\r\n * redux里面有很多方法，不适合序列化存储\r\n * 所以在getInitialProps之后返回initialReduxState\r\n * 再通过initialReduxState去创建完整的store\r\n * 但是为了性能，客户端每次执行该方法的时候都去找一下window对象里面时候已经有了store\r\n */\r\nimport React from 'react';\r\nimport initializeStore from '../redux/store';\r\n\r\nconst isServer = typeof window === 'undefined';\r\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'; // 存储在window中表示window已经有了store\r\n\r\nfunction getOrCreateStore(initialState) {\r\n  if (isServer) {\r\n    // 服务端执行时都重新创建一个store\r\n    return initializeStore(initialState);\r\n  }\r\n  if (!window[__NEXT_REDUX_STORE__]) {\r\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\r\n  }\r\n  return window[__NEXT_REDUX_STORE__];\r\n}\r\n\r\nconst withRedux = Comp => {\r\n  function withReduxApp(props) {\r\n    const { Component, pageProps, initialReduxState, ...rest } = props;\r\n    return (\r\n      <Comp\r\n        Component={Component}\r\n        pageProps={pageProps}\r\n        reduxStore={getOrCreateStore(initialReduxState)}\r\n        {...rest}\r\n      />\r\n    );\r\n  }\r\n\r\n  withReduxApp.getInitialProps = async ctx => {\r\n    let reduxStore;\r\n    // 只有在服务端的时候，req才存在\r\n    if (isServer) {\r\n      const {\r\n        ctx: { req },\r\n      } = ctx;\r\n      const { session } = req;\r\n      if (session && session.userInfo) {\r\n        reduxStore = await getOrCreateStore({\r\n          user: session.userInfo,\r\n        });\r\n      } else {\r\n        reduxStore = await getOrCreateStore();\r\n      }\r\n    } else {\r\n      reduxStore = await getOrCreateStore();\r\n    }\r\n\r\n    ctx.reduxStore = reduxStore;\r\n\r\n    let appProps = {};\r\n    if (typeof Comp.getInitialProps === 'function') {\r\n      appProps = await Comp.getInitialProps(ctx);\r\n    }\r\n\r\n    return {\r\n      ...appProps,\r\n      initialReduxState: reduxStore.getState(),\r\n    };\r\n  };\r\n  return withReduxApp;\r\n};\r\n\r\nexport default withRedux;\r\n"]},"metadata":{},"sourceType":"module"}