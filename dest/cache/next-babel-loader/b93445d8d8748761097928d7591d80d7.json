{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\components\\\\SearchInput\\\\index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { withRouter } from 'next/router';\nimport { Input } from 'antd';\nimport { useCallback, useState } from 'react';\n\nvar SearchInput = function SearchInput(_ref) {\n  _s();\n\n  var router = _ref.router;\n  var urlQuery = router.query && router.query.query; // 得到当前路由的参数，如果直接输入地址，自动将检索内容加入到搜索框\n\n  var _useState = useState(urlQuery || ''),\n      search = _useState[0],\n      setSearch = _useState[1];\n\n  var handleSearchChange = useCallback(function (e) {\n    return setSearch(e.target.value);\n  }, []); // 因为依赖于setSearch，而这个方法是不会改变的，所以可以直接传[]\n\n  var handleOnSearch = useCallback(function () {\n    return router.push(\"/search?query=\".concat(search));\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(Input.Search, {\n    onChange: handleSearchChange,\n    onSearch: handleOnSearch,\n    value: search,\n    placeholder: \"search...\",\n    style: {\n      paddingTop: '17px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SearchInput, \"fyvRHCJijPWI7z28Xi8lwyfP+Tc=\");\n\n_c = SearchInput;\nexport default _c2 = withRouter(SearchInput);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchInput\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/MyGit/github-demo/components/SearchInput/index.jsx"],"names":["withRouter","Input","useCallback","useState","SearchInput","router","urlQuery","query","search","setSearch","handleSearchChange","e","target","value","handleOnSearch","push","paddingTop"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAClC,MAAMC,QAAQ,GAAGD,MAAM,CAACE,KAAP,IAAgBF,MAAM,CAACE,KAAP,CAAaA,KAA9C,CADkC,CACmB;;AADnB,kBAENJ,QAAQ,CAACG,QAAQ,IAAI,EAAb,CAFF;AAAA,MAE3BE,MAF2B;AAAA,MAEnBC,SAFmB;;AAIlC,MAAMC,kBAAkB,GAAGR,WAAW,CAAC,UAAAS,CAAC;AAAA,WAAIF,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAAA,GAAF,EAAiC,EAAjC,CAAtC,CAJkC,CAI0C;;AAC5E,MAAMC,cAAc,GAAGZ,WAAW,CAAC;AAAA,WAAMG,MAAM,CAACU,IAAP,yBAA6BP,MAA7B,EAAN;AAAA,GAAD,EAA+C,CAACA,MAAD,CAA/C,CAAlC;AAEA,sBACE,QAAC,KAAD,CAAO,MAAP;AACE,IAAA,QAAQ,EAAEE,kBADZ;AAEE,IAAA,QAAQ,EAAEI,cAFZ;AAGE,IAAA,KAAK,EAAEN,MAHT;AAIE,IAAA,WAAW,EAAC,WAJd;AAKE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,UAAU,EAAE;AAAd;AALT;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAhBD;;GAAMZ,W;;KAAAA,W;AAiBN,qBAAeJ,UAAU,CAACI,WAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\r\nimport { Input } from 'antd';\r\nimport { useCallback, useState } from 'react';\r\n\r\nconst SearchInput = ({ router }) => {\r\n  const urlQuery = router.query && router.query.query; // 得到当前路由的参数，如果直接输入地址，自动将检索内容加入到搜索框\r\n  const [search, setSearch] = useState(urlQuery || '');\r\n\r\n  const handleSearchChange = useCallback(e => setSearch(e.target.value), []); // 因为依赖于setSearch，而这个方法是不会改变的，所以可以直接传[]\r\n  const handleOnSearch = useCallback(() => router.push(`/search?query=${search}`), [search]);\r\n\r\n  return (\r\n    <Input.Search\r\n      onChange={handleSearchChange}\r\n      onSearch={handleOnSearch}\r\n      value={search}\r\n      placeholder=\"search...\"\r\n      style={{ paddingTop: '17px' }}\r\n    />\r\n  );\r\n};\r\nexport default withRouter(SearchInput);\r\n"]},"metadata":{},"sourceType":"module"}