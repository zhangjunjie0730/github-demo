{"ast":null,"code":"var _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\index.jsx\";\nimport React from \"react\";\nimport getConfig from 'next/config';\nimport { withRouter } from 'next/router';\nimport { request } from '../utils/api';\nconst {\n  publicRuntimeConfig\n} = getConfig();\n\nconst Index = ({\n  ctx\n}) => {\n  console.log('index.ctx', ctx);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"index\"));\n};\n\nIndex.getInitialProps = async ({\n  ctx,\n  reduxStore\n}) => {\n  // const { user } = reduxStore.getState();\n  // if (!user || !user.id) {\n  //   return {};\n  // }\n  // const { data: userRepos } = await request(\n  //   {\n  //     url: '/user/repos',\n  //   },\n  //   ctx.req,\n  //   ctx.res\n  // );\n  // const { data: starred } = await request(\n  //   {\n  //     url: '/user/starred',\n  //   },\n  //   ctx.req,\n  //   ctx.res\n  // );\n  // return {\n  //   userRepos,\n  //   starred,\n  // };\n  return ctx;\n}; // Index.getInitialProps = async context => {\n//   console.log('index页面的context', context);\n//   // const result = await api.request({ url: `/user/repos` }, ctx.req, ctx.res);\n//   // return {\n//   //   userRepos: result.data,\n//   //   ctx,\n//   // };\n//   return context;\n// };\n\n\nexport default withRouter(Index);","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/index.jsx"],"names":["getConfig","withRouter","request","publicRuntimeConfig","Index","ctx","console","log","getInitialProps","reduxStore"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA0BH,SAAS,EAAzC;;AAEA,MAAMI,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF;AAKD,CAPD;;AAQAD,KAAK,CAACI,eAAN,GAAwB,OAAO;AAAEH,EAAAA,GAAF;AAAOI,EAAAA;AAAP,CAAP,KAA+B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAOJ,GAAP;AACD,CAxBD,C,CAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,UAAU,CAACG,KAAD,CAAzB","sourcesContent":["import getConfig from 'next/config';\r\nimport { withRouter } from 'next/router';\r\nimport { request } from '../utils/api';\r\n\r\nconst { publicRuntimeConfig } = getConfig();\r\n\r\nconst Index = ({ ctx }) => {\r\n  console.log('index.ctx', ctx);\r\n  return (\r\n    <>\r\n      <span>index</span>\r\n    </>\r\n  );\r\n};\r\nIndex.getInitialProps = async ({ ctx, reduxStore }) => {\r\n  // const { user } = reduxStore.getState();\r\n  // if (!user || !user.id) {\r\n  //   return {};\r\n  // }\r\n  // const { data: userRepos } = await request(\r\n  //   {\r\n  //     url: '/user/repos',\r\n  //   },\r\n  //   ctx.req,\r\n  //   ctx.res\r\n  // );\r\n  // const { data: starred } = await request(\r\n  //   {\r\n  //     url: '/user/starred',\r\n  //   },\r\n  //   ctx.req,\r\n  //   ctx.res\r\n  // );\r\n  // return {\r\n  //   userRepos,\r\n  //   starred,\r\n  // };\r\n  return ctx;\r\n};\r\n// Index.getInitialProps = async context => {\r\n//   console.log('index页面的context', context);\r\n//   // const result = await api.request({ url: `/user/repos` }, ctx.req, ctx.res);\r\n//   // return {\r\n//   //   userRepos: result.data,\r\n//   //   ctx,\r\n//   // };\r\n//   return context;\r\n// };\r\n\r\nexport default withRouter(Index);\r\n"]},"metadata":{},"sourceType":"module"}