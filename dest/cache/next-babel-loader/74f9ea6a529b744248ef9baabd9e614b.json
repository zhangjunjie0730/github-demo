{"ast":null,"code":"import _regeneratorRuntime from \"E:/MyGit/github-demo/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\index.jsx\",\n    _this = this;\n\nvar api = require('../utils/api');\n\nvar Index = function Index() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"index\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var ctx, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref.ctx;\n            _context.next = 3;\n            return api.request({\n              url: \"/search/repositories?q=react\"\n            }, ctx.req, ctx.res);\n\n          case 3:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: result.data\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/index.jsx"],"names":["api","require","Index","getInitialProps","ctx","request","url","req","res","result","data"],"mappings":";;;;;;;;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAND;;KAAMA,K;;AAQNA,KAAK,CAACC,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,QAASA,GAAT;AAAA;AAAA,mBACDJ,GAAG,CAACK,OAAJ,CAAY;AAAEC,cAAAA,GAAG;AAAL,aAAZ,EAAqDF,GAAG,CAACG,GAAzD,EAA8DH,GAAG,CAACI,GAAlE,CADC;;AAAA;AAChBC,YAAAA,MADgB;AAAA,6CAEf;AACLC,cAAAA,IAAI,EAAED,MAAM,CAACC;AADR,aAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeR,KAAf","sourcesContent":["const api = require('../utils/api');\r\n\r\nconst Index = () => {\r\n  return (\r\n    <>\r\n      <span>index</span>\r\n    </>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async ({ ctx }) => {\r\n  const result = await api.request({ url: `/search/repositories?q=react` }, ctx.req, ctx.res);\r\n  return {\r\n    data: result.data,\r\n  };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}