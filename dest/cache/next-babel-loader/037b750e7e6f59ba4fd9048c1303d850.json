{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\detail\\\\index.jsx\";\nimport { useRouter } from 'next/router';\nimport { request } from '../../utils/api';\n\nfunction Detail(_ref) {\n  var readme = _ref.readme;\n  console.log(readme);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"detail\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Detail;\n\nDetail.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, _ctx$query, owner, name, req, res, _yield$request, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx;\n            _ctx$query = ctx.query, owner = _ctx$query.owner, name = _ctx$query.name, req = ctx.req, res = ctx.res;\n            _context.next = 4;\n            return request({\n              url: \"/repos/\".concat(owner, \"/\").concat(name, \"/readme\")\n            }, req, res);\n\n          case 4:\n            _yield$request = _context.sent;\n            data = _yield$request.data;\n            return _context.abrupt(\"return\", {\n              readme: data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/detail/index.jsx"],"names":["useRouter","request","Detail","readme","console","log","getInitialProps","ctx","query","owner","name","req","res","url","data"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,SAASC,MAAT,OAA4B;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAHQD,M;;AAKTA,MAAM,CAACI,eAAP;AAAA,uEAAyB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT;AAAA,yBAKnBA,GALmB,CAErBC,KAFqB,EAEZC,KAFY,cAEZA,KAFY,EAELC,IAFK,cAELA,IAFK,EAGrBC,GAHqB,GAKnBJ,GALmB,CAGrBI,GAHqB,EAIrBC,GAJqB,GAKnBL,GALmB,CAIrBK,GAJqB;AAAA;AAAA,mBAOAX,OAAO,CAAC;AAAEY,cAAAA,GAAG,mBAAYJ,KAAZ,cAAqBC,IAArB;AAAL,aAAD,EAA4CC,GAA5C,EAAiDC,GAAjD,CAPP;;AAAA;AAAA;AAOfE,YAAAA,IAPe,kBAOfA,IAPe;AAAA,6CAShB;AACLX,cAAAA,MAAM,EAAEW;AADH,aATgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAeZ,MAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport { request } from '../../utils/api';\r\n\r\nfunction Detail({ readme }) {\r\n  console.log(readme);\r\n  return <div>detail</div>;\r\n}\r\n\r\nDetail.getInitialProps = async ({ ctx }) => {\r\n  const {\r\n    query: { owner, name },\r\n    req,\r\n    res,\r\n  } = ctx;\r\n\r\n  const { data } = await request({ url: `/repos/${owner}/${name}/readme` }, req, res);\r\n\r\n  return {\r\n    readme: data,\r\n  };\r\n};\r\n\r\nexport default Detail;\r\n"]},"metadata":{},"sourceType":"module"}