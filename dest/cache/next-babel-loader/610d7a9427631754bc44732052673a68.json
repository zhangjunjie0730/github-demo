{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\detail\\\\issues.jsx\";\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport SearchUser from '../../components/SearchUser';\nimport { genDetailCacheKey, genDetailCacheKeyStrate } from '../../utils';\nimport { request } from '../../utils/api';\nimport initClientCache from '../../utils/client-cache';\nconst {\n  cache,\n  useCache\n} = initClientCache({\n  genCacheKeyStrate: context => genDetailCacheKeyStrate(context)\n});\n\nconst Issues = ({\n  services\n}) => {\n  const router = useRouter();\n  useCache(genDetailCacheKey(router, {\n    services\n  }));\n  const {\n    issues,\n    labels\n  } = services;\n  const {\n    0: creator,\n    1: setCreator\n  } = useState();\n  const {\n    0: issueState,\n    1: setIssueState\n  } = useState();\n  const {\n    0: selectedLabels,\n    1: setSelectedLabels\n  } = useState([]);\n  const {\n    0: issuesChange,\n    1: setIssuesChange\n  } = useState(issues);\n  const {\n    0: fetching,\n    1: setFetching\n  } = useState(false);\n\n  const handleLabelsChange = selected => setSelectedLabels(selected);\n\n  const handleSearch = async () => {\n    setFetching(false);\n    const {\n      data: searchIssues\n    } = await request({\n      url: `/repos/${owner}/${name}/issues${makeQuery(creator, issueState, selectedLabels)}`\n    });\n    setIssuesChange(searchIssues);\n    setFetching(false);\n  };\n\n  const selectCommonStyle = {\n    alignSelf: 'flex-start',\n    width: 200,\n    marginLeft: 20\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(SearchUser, {\n        value: creator,\n        onChange: setCreator,\n        style: selectCommonStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\nIssues.getInitialProps = cache(async ({\n  ctx\n}) => {\n  const {\n    owner,\n    name\n  } = ctx.query;\n  const [{\n    data: issues\n  }, {\n    data: labels\n  }] = await Promise.all([request({\n    url: `/repos/${owner}/${name}/issues`\n  }, ctx.req, ctx.res), request({\n    url: `/repos/${owner}/${name}/labels`\n  }, ctx.req, ctx.res)]);\n  return {\n    services: {\n      issues,\n      labels\n    }\n  };\n});\nexport default Issues;","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/detail/issues.jsx"],"names":["useRouter","useState","SearchUser","genDetailCacheKey","genDetailCacheKeyStrate","request","initClientCache","cache","useCache","genCacheKeyStrate","context","Issues","services","router","issues","labels","creator","setCreator","issueState","setIssueState","selectedLabels","setSelectedLabels","issuesChange","setIssuesChange","fetching","setFetching","handleLabelsChange","selected","handleSearch","data","searchIssues","url","owner","name","makeQuery","selectCommonStyle","alignSelf","width","marginLeft","getInitialProps","ctx","query","Promise","all","req","res"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\r\nimport { useState } from 'react';\r\nimport SearchUser from '../../components/SearchUser';\r\nimport { genDetailCacheKey, genDetailCacheKeyStrate } from '../../utils';\r\nimport { request } from '../../utils/api';\r\nimport initClientCache from '../../utils/client-cache';\r\n\r\nconst { cache, useCache } = initClientCache({\r\n  genCacheKeyStrate: context => genDetailCacheKeyStrate(context),\r\n});\r\n\r\nconst Issues = ({ services }) => {\r\n  const router = useRouter();\r\n  useCache(genDetailCacheKey(router, { services }));\r\n\r\n  const { issues, labels } = services;\r\n\r\n  const [creator, setCreator] = useState();\r\n  const [issueState, setIssueState] = useState();\r\n  const [selectedLabels, setSelectedLabels] = useState([]);\r\n  const [issuesChange, setIssuesChange] = useState(issues);\r\n  const [fetching, setFetching] = useState(false);\r\n  const handleLabelsChange = selected => setSelectedLabels(selected);\r\n\r\n  const handleSearch = async () => {\r\n    setFetching(false);\r\n    const { data: searchIssues } = await request({\r\n      url: `/repos/${owner}/${name}/issues${makeQuery(creator, issueState, selectedLabels)}`,\r\n    });\r\n    setIssuesChange(searchIssues);\r\n    setFetching(false);\r\n  };\r\n\r\n  const selectCommonStyle = {\r\n    alignSelf: 'flex-start',\r\n    width: 200,\r\n    marginLeft: 20,\r\n  };\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"search\">\r\n        <SearchUser value={creator} onChange={setCreator} style={selectCommonStyle} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nIssues.getInitialProps = cache(async ({ ctx }) => {\r\n  const { owner, name } = ctx.query;\r\n  const [{ data: issues }, { data: labels }] = await Promise.all([\r\n    request({ url: `/repos/${owner}/${name}/issues` }, ctx.req, ctx.res),\r\n    request({ url: `/repos/${owner}/${name}/labels` }, ctx.req, ctx.res),\r\n  ]);\r\n\r\n  return {\r\n    services: {\r\n      issues,\r\n      labels,\r\n    },\r\n  };\r\n});\r\n\r\nexport default Issues;\r\n"]},"metadata":{},"sourceType":"module"}