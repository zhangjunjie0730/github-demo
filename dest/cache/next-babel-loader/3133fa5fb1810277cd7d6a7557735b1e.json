{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\detail\\\\issues.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport SearchUser from '../../components/SearchUser';\nimport { genDetailCacheKey, genDetailCacheKeyStrate } from '../../utils';\nimport { request } from '../../utils/api';\nimport initClientCache from '../../utils/client-cache';\n\nvar _initClientCache = initClientCache({\n  genCacheKeyStrate: function genCacheKeyStrate(context) {\n    return genDetailCacheKeyStrate(context);\n  }\n}),\n    cache = _initClientCache.cache,\n    useCache = _initClientCache.useCache;\n\nvar Issues = function Issues(_ref) {\n  _s();\n\n  var services = _ref.services;\n  var router = useRouter();\n  useCache(genDetailCacheKey(router, {\n    services: services\n  }));\n  var issues = services.issues,\n      labels = services.labels;\n\n  var _useState = useState(),\n      creator = _useState[0],\n      setCreator = _useState[1];\n\n  var _useState2 = useState(),\n      issueState = _useState2[0],\n      setIssueState = _useState2[1];\n\n  var _useState3 = useState([]),\n      selectedLabels = _useState3[0],\n      setSelectedLabels = _useState3[1];\n\n  var _useState4 = useState(issues),\n      issuesChange = _useState4[0],\n      setIssuesChange = _useState4[1];\n\n  var _useState5 = useState(false),\n      fetching = _useState5[0],\n      setFetching = _useState5[1];\n\n  var handleLabelsChange = function handleLabelsChange(selected) {\n    return setSelectedLabels(selected);\n  };\n\n  var handleSearch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$request, searchIssues;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setFetching(false);\n              _context.next = 3;\n              return request({\n                url: \"/repos/\".concat(owner, \"/\").concat(name, \"/issues\").concat(makeQuery(creator, issueState, selectedLabels))\n              });\n\n            case 3:\n              _yield$request = _context.sent;\n              searchIssues = _yield$request.data;\n              setIssuesChange(searchIssues);\n              setFetching(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSearch() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var selectCommonStyle = {\n    alignSelf: 'flex-start',\n    width: 200,\n    marginLeft: 20\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(SearchUser, {\n        value: creator,\n        onChange: setCreator,\n        style: selectCommonStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Issues, \"a1FTotoDi18ICDbODYVbmiE1/gs=\", false, function () {\n  return [useRouter, useCache];\n});\n\n_c = Issues;\nIssues.getInitialProps = cache( /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n    var ctx, _ctx$query, owner, name, _yield$Promise$all, _yield$Promise$all2, issues, labels;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            ctx = _ref3.ctx;\n            _ctx$query = ctx.query, owner = _ctx$query.owner, name = _ctx$query.name;\n            _context2.next = 4;\n            return Promise.all([request({\n              url: \"/repos/\".concat(owner, \"/\").concat(name, \"/issues\")\n            }, ctx.req, ctx.res), request({\n              url: \"/repos/\".concat(owner, \"/\").concat(name, \"/labels\")\n            }, ctx.req, ctx.res)]);\n\n          case 4:\n            _yield$Promise$all = _context2.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n            issues = _yield$Promise$all2[0].data;\n            labels = _yield$Promise$all2[1].data;\n            return _context2.abrupt(\"return\", {\n              services: {\n                issues: issues,\n                labels: labels\n              }\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nexport default Issues;\n\nvar _c;\n\n$RefreshReg$(_c, \"Issues\");","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/detail/issues.jsx"],"names":["useRouter","useState","SearchUser","genDetailCacheKey","genDetailCacheKeyStrate","request","initClientCache","genCacheKeyStrate","context","cache","useCache","Issues","services","router","issues","labels","creator","setCreator","issueState","setIssueState","selectedLabels","setSelectedLabels","issuesChange","setIssuesChange","fetching","setFetching","handleLabelsChange","selected","handleSearch","url","owner","name","makeQuery","searchIssues","data","selectCommonStyle","alignSelf","width","marginLeft","getInitialProps","ctx","query","Promise","all","req","res"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\r\nimport { useState } from 'react';\r\nimport SearchUser from '../../components/SearchUser';\r\nimport { genDetailCacheKey, genDetailCacheKeyStrate } from '../../utils';\r\nimport { request } from '../../utils/api';\r\nimport initClientCache from '../../utils/client-cache';\r\n\r\nconst { cache, useCache } = initClientCache({\r\n  genCacheKeyStrate: context => genDetailCacheKeyStrate(context),\r\n});\r\n\r\nconst Issues = ({ services }) => {\r\n  const router = useRouter();\r\n  useCache(genDetailCacheKey(router, { services }));\r\n\r\n  const { issues, labels } = services;\r\n\r\n  const [creator, setCreator] = useState();\r\n  const [issueState, setIssueState] = useState();\r\n  const [selectedLabels, setSelectedLabels] = useState([]);\r\n  const [issuesChange, setIssuesChange] = useState(issues);\r\n  const [fetching, setFetching] = useState(false);\r\n  const handleLabelsChange = selected => setSelectedLabels(selected);\r\n\r\n  const handleSearch = async () => {\r\n    setFetching(false);\r\n    const { data: searchIssues } = await request({\r\n      url: `/repos/${owner}/${name}/issues${makeQuery(creator, issueState, selectedLabels)}`,\r\n    });\r\n    setIssuesChange(searchIssues);\r\n    setFetching(false);\r\n  };\r\n\r\n  const selectCommonStyle = {\r\n    alignSelf: 'flex-start',\r\n    width: 200,\r\n    marginLeft: 20,\r\n  };\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"search\">\r\n        <SearchUser value={creator} onChange={setCreator} style={selectCommonStyle} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nIssues.getInitialProps = cache(async ({ ctx }) => {\r\n  const { owner, name } = ctx.query;\r\n  const [{ data: issues }, { data: labels }] = await Promise.all([\r\n    request({ url: `/repos/${owner}/${name}/issues` }, ctx.req, ctx.res),\r\n    request({ url: `/repos/${owner}/${name}/labels` }, ctx.req, ctx.res),\r\n  ]);\r\n\r\n  return {\r\n    services: {\r\n      issues,\r\n      labels,\r\n    },\r\n  };\r\n});\r\n\r\nexport default Issues;\r\n"]},"metadata":{},"sourceType":"module"}