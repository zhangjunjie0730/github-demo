{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\nimport Layout from '../components/Layout';\nimport withRedux from '../utils/with-redux-app';\nimport PageLoading from '../components/PageLoading';\nimport useStore from '../redux/store';\nimport axios from 'axios'; // Component对应pages的每个页面\n\nfunction MyApp(props) {\n  const {\n    Component,\n    pageProps,\n    reduxStore\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: userInfo,\n    1: setUserInfo\n  } = useState('');\n\n  const startLoading = () => setLoading(true);\n\n  const stopLoading = () => setLoading(false);\n\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    Router.events.on('routeChangeError', stopLoading);\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n      Router.events.off('routeChangeError', stopLoading);\n    };\n  });\n  useEffect(() => {\n    axios.get('/api/user/info').then(res => setUserInfo(res.data));\n  });\n  const store = useStore(pageProps.initialReduxState);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [loading && /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n} // MyApp.getInitialProps = async appContext => {\n//   const appProps = await App.getInitialProps(appContext);\n//   return { ...appProps };\n// };\n// export default withRedux(MyApp);\n\n\nexport default MyApp;","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/_app.js"],"names":["App","useEffect","useState","Provider","Router","Layout","withRedux","PageLoading","useStore","axios","MyApp","props","Component","pageProps","reduxStore","loading","setLoading","userInfo","setUserInfo","startLoading","stopLoading","events","on","off","get","then","res","data","store","initialReduxState"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAO,oBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,MAAuCH,KAA7C;AAEA,QAAM;AAAA,OAACI,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACe,QAAD;AAAA,OAAWC;AAAX,MAA0BhB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMiB,YAAY,GAAG,MAAMH,UAAU,CAAC,IAAD,CAArC;;AACA,QAAMI,WAAW,GAAG,MAAMJ,UAAU,CAAC,KAAD,CAApC;;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACiB,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCH,YAArC;AACAf,IAAAA,MAAM,CAACiB,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCF,WAAxC;AACAhB,IAAAA,MAAM,CAACiB,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCF,WAArC;AACA,WAAO,MAAM;AACXhB,MAAAA,MAAM,CAACiB,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCJ,YAAtC;AACAf,MAAAA,MAAM,CAACiB,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCH,WAAzC;AACAhB,MAAAA,MAAM,CAACiB,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCH,WAAtC;AACD,KAJD;AAKD,GATQ,CAAT;AAWAnB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACe,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAiCC,GAAG,IAAIR,WAAW,CAACQ,GAAG,CAACC,IAAL,CAAnD;AACD,GAFQ,CAAT;AAIA,QAAMC,KAAK,GAAGpB,QAAQ,CAACK,SAAS,CAACgB,iBAAX,CAAtB;AACA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA,2BACE,QAAC,MAAD;AAAA,iBACGb,OAAO,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADd,eAEE,QAAC,SAAD,oBAAeF,SAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;AACA;AACA;AACA;AAEA;;;AACA,eAAeH,KAAf","sourcesContent":["import App from 'next/app';\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\n\nimport Layout from '../components/Layout';\nimport withRedux from '../utils/with-redux-app';\nimport PageLoading from '../components/PageLoading';\nimport useStore from '../redux/store';\nimport axios from 'axios';\n\n// Component对应pages的每个页面\nfunction MyApp(props) {\n  const { Component, pageProps, reduxStore } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [userInfo, setUserInfo] = useState('');\n\n  const startLoading = () => setLoading(true);\n  const stopLoading = () => setLoading(false);\n\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    Router.events.on('routeChangeError', stopLoading);\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n      Router.events.off('routeChangeError', stopLoading);\n    };\n  });\n\n  useEffect(() => {\n    axios.get('/api/user/info').then(res => setUserInfo(res.data));\n  });\n\n  const store = useStore(pageProps.initialReduxState);\n  return (\n    <Provider store={store}>\n      <Layout>\n        {loading && <PageLoading />}\n        <Component {...pageProps} />\n      </Layout>\n    </Provider>\n  );\n}\n\n// MyApp.getInitialProps = async appContext => {\n//   const appProps = await App.getInitialProps(appContext);\n//   return { ...appProps };\n// };\n\n// export default withRedux(MyApp);\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}