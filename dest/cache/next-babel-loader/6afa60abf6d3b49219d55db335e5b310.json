{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button } from 'antd';\nimport getConfig from 'next/config';\nimport { withRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport { request } from '../utils/api';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var userRepos = _ref.userRepos,\n      starred = _ref.starred;\n  var user = useSelector(function (store) {\n    return store.user;\n  });\n\n  if (!user || !user.id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u60A8\\u8FD8\\u6CA1\\u6709\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        href: publicRuntimeConfig.OAUTH_URL,\n        children: \"\\u70B9\\u51FB\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"index\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Index, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, reduxStore, _reduxStore$getState, user, _yield$request, userRepos, _yield$request2, starred;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx, reduxStore = _ref2.reduxStore;\n            _reduxStore$getState = reduxStore.getState(), user = _reduxStore$getState.user;\n\n            if (!(!user || !user.id)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {});\n\n          case 4:\n            _context.next = 6;\n            return request({\n              url: '/user/repos'\n            }, ctx.req, ctx.res);\n\n          case 6:\n            _yield$request = _context.sent;\n            userRepos = _yield$request.data;\n            _context.next = 10;\n            return request({\n              url: '/user/starred'\n            }, ctx.req, ctx.res);\n\n          case 10:\n            _yield$request2 = _context.sent;\n            starred = _yield$request2.data;\n            return _context.abrupt(\"return\", {\n              userRepos: userRepos,\n              starred: starred\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withRouter(Index);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/index.jsx"],"names":["Button","getConfig","withRouter","useSelector","request","publicRuntimeConfig","Index","userRepos","starred","user","store","id","OAUTH_URL","getInitialProps","ctx","reduxStore","getState","url","req","res","data"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,cAAxB;;iBAEgCH,SAAS,E;IAAjCI,mB,cAAAA,mB;;AAER,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA4B;AAAA;;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACxC,MAAMC,IAAI,GAAGN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAV;AAAA,GAAN,CAAxB;;AAEA,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACE,EAAnB,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,IAAI,EAAEN,mBAAmB,CAACO,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAQD;;AAED,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAnBD;;GAAMN,K;UACSH,W;;;KADTG,K;;AAqBNA,KAAK,CAACO,eAAN;AAAA,uEAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcC,UAAd,SAAcA,UAAd;AAAA,mCACLA,UAAU,CAACC,QAAX,EADK,EACdP,IADc,wBACdA,IADc;;AAAA,kBAElB,CAACA,IAAD,IAAS,CAACA,IAAI,CAACE,EAFG;AAAA;AAAA;AAAA;;AAAA,6CAGb,EAHa;;AAAA;AAAA;AAAA,mBAKYP,OAAO,CACvC;AACEa,cAAAA,GAAG,EAAE;AADP,aADuC,EAIvCH,GAAG,CAACI,GAJmC,EAKvCJ,GAAG,CAACK,GALmC,CALnB;;AAAA;AAAA;AAKRZ,YAAAA,SALQ,kBAKda,IALc;AAAA;AAAA,mBAYUhB,OAAO,CACrC;AACEa,cAAAA,GAAG,EAAE;AADP,aADqC,EAIrCH,GAAG,CAACI,GAJiC,EAKrCJ,GAAG,CAACK,GALiC,CAZjB;;AAAA;AAAA;AAYRX,YAAAA,OAZQ,mBAYdY,IAZc;AAAA,6CAmBf;AACLb,cAAAA,SAAS,EAATA,SADK;AAELC,cAAAA,OAAO,EAAPA;AAFK,aAnBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAyBA,qBAAeN,UAAU,CAACI,KAAD,CAAzB","sourcesContent":["import { Button } from 'antd';\r\nimport getConfig from 'next/config';\r\nimport { withRouter } from 'next/router';\r\nimport { useSelector } from 'react-redux';\r\nimport { request } from '../utils/api';\r\n\r\nconst { publicRuntimeConfig } = getConfig();\r\n\r\nconst Index = ({ userRepos, starred }) => {\r\n  const user = useSelector(store => store.user);\r\n\r\n  if (!user || !user.id) {\r\n    return (\r\n      <div className=\"root\">\r\n        <p>您还没有登录</p>\r\n        <Button type=\"primary\" href={publicRuntimeConfig.OAUTH_URL}>\r\n          点击登录\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <span>index</span>\r\n    </>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async ({ ctx, reduxStore }) => {\r\n  const { user } = reduxStore.getState();\r\n  if (!user || !user.id) {\r\n    return {};\r\n  }\r\n  const { data: userRepos } = await request(\r\n    {\r\n      url: '/user/repos',\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n  const { data: starred } = await request(\r\n    {\r\n      url: '/user/starred',\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n  return {\r\n    userRepos,\r\n    starred,\r\n  };\r\n};\r\n\r\nexport default withRouter(Index);\r\n"]},"metadata":{},"sourceType":"module"}