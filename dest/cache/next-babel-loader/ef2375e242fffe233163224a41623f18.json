{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\nimport Layout from '../components/Layout';\nimport withRedux from '../utils/with-redux-app';\nimport PageLoading from '../components/PageLoading';\nimport { useStore } from '../redux/store'; // Component对应pages的每个页面\n\nfunction MyApp(props) {\n  const {\n    Component,\n    pageProps,\n    reduxStore\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const startLoading = () => setLoading(true);\n\n  const stopLoading = () => setLoading(false);\n\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    Router.events.on('routeChangeError', stopLoading);\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n      Router.events.off('routeChangeError', stopLoading);\n    };\n  });\n  console.log('_app.props', props);\n  const store = useStore(pageProps.initialReduxState);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [loading && /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\nMyApp.getInitialProps = async appContext => {\n  const appProps = await App.getInitialProps(appContext);\n  return _objectSpread({}, appProps);\n}; // export default withRedux(MyApp);\n\n\nexport default MyApp;","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/_app.js"],"names":["App","useEffect","useState","Provider","Router","Layout","withRedux","PageLoading","useStore","MyApp","props","Component","pageProps","reduxStore","loading","setLoading","startLoading","stopLoading","events","on","off","console","log","store","initialReduxState","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAO,oBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB,C,CAEA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,MAAuCH,KAA7C;AAEA,QAAM;AAAA,OAACI,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMc,YAAY,GAAG,MAAMD,UAAU,CAAC,IAAD,CAArC;;AACA,QAAME,WAAW,GAAG,MAAMF,UAAU,CAAC,KAAD,CAApC;;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACc,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCH,YAArC;AACAZ,IAAAA,MAAM,CAACc,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCF,WAAxC;AACAb,IAAAA,MAAM,CAACc,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCF,WAArC;AACA,WAAO,MAAM;AACXb,MAAAA,MAAM,CAACc,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCJ,YAAtC;AACAZ,MAAAA,MAAM,CAACc,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCH,WAAzC;AACAb,MAAAA,MAAM,CAACc,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCH,WAAtC;AACD,KAJD;AAKD,GATQ,CAAT;AAUAI,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BZ,KAA1B;AACA,QAAMa,KAAK,GAAGf,QAAQ,CAACI,SAAS,CAACY,iBAAX,CAAtB;AACA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA,2BACE,QAAC,MAAD;AAAA,iBACGT,OAAO,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADd,eAEE,QAAC,SAAD,oBAAeF,SAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAEDH,KAAK,CAACgB,eAAN,GAAwB,MAAMC,UAAN,IAAoB;AAC1C,QAAMC,QAAQ,GAAG,MAAM3B,GAAG,CAACyB,eAAJ,CAAoBC,UAApB,CAAvB;AACA,2BAAYC,QAAZ;AACD,CAHD,C,CAKA;;;AACA,eAAelB,KAAf","sourcesContent":["import App from 'next/app';\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\n\nimport Layout from '../components/Layout';\nimport withRedux from '../utils/with-redux-app';\nimport PageLoading from '../components/PageLoading';\nimport { useStore } from '../redux/store';\n\n// Component对应pages的每个页面\nfunction MyApp(props) {\n  const { Component, pageProps, reduxStore } = props;\n\n  const [loading, setLoading] = useState(false);\n\n  const startLoading = () => setLoading(true);\n  const stopLoading = () => setLoading(false);\n\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    Router.events.on('routeChangeError', stopLoading);\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n      Router.events.off('routeChangeError', stopLoading);\n    };\n  });\n  console.log('_app.props', props);\n  const store = useStore(pageProps.initialReduxState);\n  return (\n    <Provider store={store}>\n      <Layout>\n        {loading && <PageLoading />}\n        <Component {...pageProps} />\n      </Layout>\n    </Provider>\n  );\n}\n\nMyApp.getInitialProps = async appContext => {\n  const appProps = await App.getInitialProps(appContext);\n  return { ...appProps };\n};\n\n// export default withRedux(MyApp);\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}