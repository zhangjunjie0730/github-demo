{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App, { Container } from 'next/app';\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\nimport Layout from '../components/Layout';\nimport withRedux from '../utils/with-redux-app';\nimport PageLoading from '../components/PageLoading'; // // Component对应pages的每个页面\n// function MyApp(props) {\n//   const { Component, pageProps, reduxStore } = props;\n//   const [loading, setLoading] = useState(false);\n//   const startLoading = () => setLoading(true);\n//   const stopLoading = () => setLoading(false);\n//   useEffect(() => {\n//     Router.events.on('routeChangeStart', startLoading);\n//     Router.events.on('routeChangeComplete', stopLoading);\n//     Router.events.on('routeChangeError', stopLoading);\n//     return () => {\n//       Router.events.off('routeChangeStart', startLoading);\n//       Router.events.off('routeChangeComplete', stopLoading);\n//       Router.events.off('routeChangeError', stopLoading);\n//     };\n//   });\n//   return (\n//     <Container>\n//       <Provider store={reduxStore}>\n//         <Layout>\n//           {loading && <PageLoading />}\n//           <Component {...pageProps} />\n//         </Layout>\n//       </Provider>\n//     </Container>\n//   );\n// }\n\nMyApp.getInitialProps = async appContext => {\n  const {\n    Component\n  } = ctx;\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  } // 返回给组件\n\n\n  return {\n    pageProps\n  };\n};\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      context: 'value',\n      loading: false\n    });\n\n    _defineProperty(this, \"startLoading\", () => {\n      this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(this, \"stopLoading\", () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx;\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    } // 返回给组件\n\n\n    return {\n      pageProps\n    };\n  }\n\n  componentDidMount() {\n    Router.events.on('routeChangeStart', this.startLoading);\n    Router.events.on('routeChangeComplete', this.stopLoading);\n    Router.events.on('routeChangeError', this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routeChangeStart', this.startLoading);\n    Router.events.off('routeChangeComplete', this.stopLoading);\n    Router.events.off('routeChangeError', this.stopLoading);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      store: reduxStore,\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: [this.state.loading && /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withRedux(MyApp);","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/_app.js"],"names":["App","Container","useEffect","useState","Provider","Router","Layout","withRedux","PageLoading","MyApp","getInitialProps","appContext","Component","ctx","pageProps","context","loading","setState","componentDidMount","events","on","startLoading","stopLoading","componentWillUnmount","off","render","reduxStore","props","state"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAO,oBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,KAAK,CAACC,eAAN,GAAwB,MAAMC,UAAN,IAAoB;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAgBC,GAAtB;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAIF,SAAS,CAACF,eAAd,EAA+B;AAC7BI,IAAAA,SAAS,GAAG,MAAMF,SAAS,CAACF,eAAV,CAA0BG,GAA1B,CAAlB;AACD,GANyC,CAQ1C;;;AACA,SAAO;AACLC,IAAAA;AADK,GAAP;AAGD,CAZD;;AAaA,MAAML,KAAN,SAAoBT,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAed;AACNe,MAAAA,OAAO,EAAE,OADH;AAENC,MAAAA,OAAO,EAAE;AAFH,KAfc;;AAAA,0CAoBP,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAxBqB;;AAAA,yCA0BR,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KA9BqB;AAAA;;AACtB,eAAaN,eAAb,CAA6BG,GAA7B,EAAkC;AAChC,UAAM;AAAED,MAAAA;AAAF,QAAgBC,GAAtB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIF,SAAS,CAACF,eAAd,EAA+B;AAC7BI,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACF,eAAV,CAA0BG,GAA1B,CAAlB;AACD,KAN+B,CAQhC;;;AACA,WAAO;AACLC,MAAAA;AADK,KAAP;AAGD;;AAmBDI,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,MAAM,CAACc,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKC,YAA1C;AACAhB,IAAAA,MAAM,CAACc,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,KAAKE,WAA7C;AACAjB,IAAAA,MAAM,CAACc,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKE,WAA1C;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBlB,IAAAA,MAAM,CAACc,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKH,YAA3C;AACAhB,IAAAA,MAAM,CAACc,MAAP,CAAcK,GAAd,CAAkB,qBAAlB,EAAyC,KAAKF,WAA9C;AACAjB,IAAAA,MAAM,CAACc,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKF,WAA3C;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBY,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AACA,wBACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAED,UAAjB;AAAA,6BACE,QAAC,MAAD;AAAA,mBACG,KAAKE,KAAL,CAAWZ,OAAX,iBAAsB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADzB,eAEE,QAAC,SAAD,oBAAeF,SAAf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAtDqB;;AAyDxB,eAAeP,SAAS,CAACE,KAAD,CAAxB","sourcesContent":["import App, { Container } from 'next/app';\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\n\nimport Layout from '../components/Layout';\nimport withRedux from '../utils/with-redux-app';\nimport PageLoading from '../components/PageLoading';\n\n// // Component对应pages的每个页面\n// function MyApp(props) {\n//   const { Component, pageProps, reduxStore } = props;\n\n//   const [loading, setLoading] = useState(false);\n\n//   const startLoading = () => setLoading(true);\n//   const stopLoading = () => setLoading(false);\n\n//   useEffect(() => {\n//     Router.events.on('routeChangeStart', startLoading);\n//     Router.events.on('routeChangeComplete', stopLoading);\n//     Router.events.on('routeChangeError', stopLoading);\n//     return () => {\n//       Router.events.off('routeChangeStart', startLoading);\n//       Router.events.off('routeChangeComplete', stopLoading);\n//       Router.events.off('routeChangeError', stopLoading);\n//     };\n//   });\n\n//   return (\n//     <Container>\n//       <Provider store={reduxStore}>\n//         <Layout>\n//           {loading && <PageLoading />}\n//           <Component {...pageProps} />\n//         </Layout>\n//       </Provider>\n//     </Container>\n//   );\n// }\n\nMyApp.getInitialProps = async appContext => {\n  const { Component } = ctx;\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  // 返回给组件\n  return {\n    pageProps,\n  };\n};\nclass MyApp extends App {\n  static async getInitialProps(ctx) {\n    const { Component } = ctx;\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    // 返回给组件\n    return {\n      pageProps,\n    };\n  }\n\n  state = {\n    context: 'value',\n    loading: false,\n  };\n\n  startLoading = () => {\n    this.setState({\n      loading: true,\n    });\n  };\n\n  stopLoading = () => {\n    this.setState({\n      loading: false,\n    });\n  };\n\n  componentDidMount() {\n    Router.events.on('routeChangeStart', this.startLoading);\n    Router.events.on('routeChangeComplete', this.stopLoading);\n    Router.events.on('routeChangeError', this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routeChangeStart', this.startLoading);\n    Router.events.off('routeChangeComplete', this.stopLoading);\n    Router.events.off('routeChangeError', this.stopLoading);\n  }\n\n  render() {\n    const { Component, pageProps, reduxStore } = this.props;\n    return (\n      <Provider store={reduxStore}>\n        <Layout>\n          {this.state.loading && <PageLoading />}\n          <Component {...pageProps} />\n        </Layout>\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(MyApp);\n"]},"metadata":{},"sourceType":"module"}