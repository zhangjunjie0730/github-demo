{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { useReducer, userInitialState } from './reducers';\nconst rootReducers = combineReducers({\n  user: useReducer\n});\nexport default function initializeStore(state) {\n  const store = createStore(rootReducers, _objectSpread(_objectSpread({}, userInitialState), state), composeWithDevTools(applyMiddleware(thunk)));\n  return store;\n}","map":{"version":3,"sources":["E:/MyGit/github-demo/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","useReducer","userInitialState","rootReducers","user","initializeStore","state","store"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AAEA,MAAMC,YAAY,GAAGN,eAAe,CAAC;AAAEO,EAAAA,IAAI,EAAEH;AAAR,CAAD,CAApC;AAEA,eAAe,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,QAAMC,KAAK,GAAGX,WAAW,CACvBO,YADuB,kCAElBD,gBAFkB,GAEGI,KAFH,GAGvBN,mBAAmB,CAACF,eAAe,CAACC,KAAD,CAAhB,CAHI,CAAzB;AAKA,SAAOQ,KAAP;AACD","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { useReducer, userInitialState } from './reducers';\r\n\r\nconst rootReducers = combineReducers({ user: useReducer });\r\n\r\nexport default function initializeStore(state) {\r\n  const store = createStore(\r\n    rootReducers,\r\n    { ...userInitialState, ...state },\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n  );\r\n  return store;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}