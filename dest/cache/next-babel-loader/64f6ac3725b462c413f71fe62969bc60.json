{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\components\\\\Markdown\\\\index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { memo, useMemo } from 'react';\nimport 'github-markdown-css';\nimport MarkdownIt from 'markdown-it';\nimport hljs from 'highlight.js/lib/highlight';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport 'highlight.js/styles/default.css';\nimport 'github-markdown-css';\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('js', javascript);\n\nfunction b64ToUtf8(str) {\n  return decodeURIComponent(escape(atob(str)));\n}\n\nvar md = new MarkdownIt({\n  html: true,\n  // html文字也能正常转义成md\n  linkify: true,\n  // 带http的可以自动变成链接\n  highlight: function highlight(str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return hljs.highlight(lang, str, true).value;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    return ''; // 使用额外的默认转义\n  }\n});\nvar hljsInited = false;\nvar Markdown = /*#__PURE__*/memo(_c = _s(function (_ref) {\n  _s();\n\n  var isBase64 = _ref.isBase64,\n      content = _ref.content;\n  var converted = isBase64 ? b64ToUtf8(content) : content;\n  var html = useMemo(function () {\n    return md.render(converted);\n  }, [converted]);\n\n  if (!hljsInited && true) {\n    hljs.initHighlightingOnLoad();\n    hljsInited = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"markdown-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: html\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n}, \"OtathaP3BKVCXaZtVNvoS+3QIcY=\"));\n_c2 = Markdown;\nexport default Markdown;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Markdown$memo\");\n$RefreshReg$(_c2, \"Markdown\");","map":{"version":3,"sources":["E:/MyGit/github-demo/components/Markdown/index.jsx"],"names":["memo","useMemo","MarkdownIt","hljs","javascript","registerLanguage","b64ToUtf8","str","decodeURIComponent","escape","atob","md","html","linkify","highlight","lang","getLanguage","value","e","console","error","hljsInited","Markdown","isBase64","content","converted","render","initHighlightingOnLoad","__html"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,OAAf,QAA8B,OAA9B;AACA,OAAO,qBAAP;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAO,iCAAP;AACA,OAAO,qBAAP;AAEAD,IAAI,CAACE,gBAAL,CAAsB,YAAtB,EAAoCD,UAApC;AACAD,IAAI,CAACE,gBAAL,CAAsB,IAAtB,EAA4BD,UAA5B;;AAEA,SAASE,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,SAAOC,kBAAkB,CAACC,MAAM,CAACC,IAAI,CAACH,GAAD,CAAL,CAAP,CAAzB;AACD;;AAED,IAAMI,EAAE,GAAG,IAAIT,UAAJ,CAAe;AACxBU,EAAAA,IAAI,EAAE,IADkB;AACZ;AACZC,EAAAA,OAAO,EAAE,IAFe;AAET;AACfC,EAAAA,SAHwB,qBAGdP,GAHc,EAGTQ,IAHS,EAGH;AACnB,QAAIA,IAAI,IAAIZ,IAAI,CAACa,WAAL,CAAiBD,IAAjB,CAAZ,EAAoC;AAClC,UAAI;AACF,eAAOZ,IAAI,CAACW,SAAL,CAAeC,IAAf,EAAqBR,GAArB,EAA0B,IAA1B,EAAgCU,KAAvC;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;;AACD,WAAO,EAAP,CARmB,CAQR;AACZ;AAZuB,CAAf,CAAX;AAeA,IAAIG,UAAU,GAAG,KAAjB;AACA,IAAMC,QAAQ,gBAAGtB,IAAI,SAAC,gBAA2B;AAAA;;AAAA,MAAxBuB,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC/C,MAAMC,SAAS,GAAGF,QAAQ,GAAGjB,SAAS,CAACkB,OAAD,CAAZ,GAAwBA,OAAlD;AACA,MAAMZ,IAAI,GAAGX,OAAO,CAAC;AAAA,WAAMU,EAAE,CAACe,MAAH,CAAUD,SAAV,CAAN;AAAA,GAAD,EAA6B,CAACA,SAAD,CAA7B,CAApB;;AAEA,MAAI,CAACJ,UAAD,QAAJ,EAAkD;AAChDlB,IAAAA,IAAI,CAACwB,sBAAL;AACAN,IAAAA,UAAU,GAAG,IAAb;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,uBAAuB,EAAE;AAAEO,QAAAA,MAAM,EAAEhB;AAAV;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAdoB,kCAArB;MAAMU,Q;AAgBN,eAAeA,QAAf","sourcesContent":["import { memo, useMemo } from 'react';\r\nimport 'github-markdown-css';\r\nimport MarkdownIt from 'markdown-it';\r\nimport hljs from 'highlight.js/lib/highlight';\r\nimport javascript from 'highlight.js/lib/languages/javascript';\r\nimport 'highlight.js/styles/default.css';\r\nimport 'github-markdown-css';\r\n\r\nhljs.registerLanguage('javascript', javascript);\r\nhljs.registerLanguage('js', javascript);\r\n\r\nfunction b64ToUtf8(str) {\r\n  return decodeURIComponent(escape(atob(str)));\r\n}\r\n\r\nconst md = new MarkdownIt({\r\n  html: true, // html文字也能正常转义成md\r\n  linkify: true, // 带http的可以自动变成链接\r\n  highlight(str, lang) {\r\n    if (lang && hljs.getLanguage(lang)) {\r\n      try {\r\n        return hljs.highlight(lang, str, true).value;\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    return ''; // 使用额外的默认转义\r\n  },\r\n});\r\n\r\nlet hljsInited = false;\r\nconst Markdown = memo(({ isBase64, content }) => {\r\n  const converted = isBase64 ? b64ToUtf8(content) : content;\r\n  const html = useMemo(() => md.render(converted), [converted]);\r\n\r\n  if (!hljsInited && typeof window !== 'undefined') {\r\n    hljs.initHighlightingOnLoad();\r\n    hljsInited = true;\r\n  }\r\n\r\n  return (\r\n    <div className=\"markdown-body\">\r\n      <div dangerouslySetInnerHTML={{ __html: html }} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Markdown;\r\n"]},"metadata":{},"sourceType":"module"}