{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\components\\\\Markdown\\\\index.jsx\";\nimport { memo, useMemo } from 'react';\nimport 'github-markdown-css';\nimport MarkdownIt from 'markdown-it'; // import hljs from 'highlight.js/lib/highlight';\n// import javascript from 'highlight.js/lib/languages/javascript';\n// import 'highlight.js/styles/default.css';\n\nimport 'github-markdown-css'; // hljs.registerLanguage('javascript', javascript);\n// hljs.registerLanguage('js', javascript);\n\nfunction b64ToUtf8(str) {\n  return decodeURIComponent(escape(atob(str)));\n}\n\nconst md = new MarkdownIt({\n  html: true,\n  // html文字也能正常转义成md\n  linkify: true // 带http的可以自动变成链接\n  // highlight(str, lang) {\n  //   if (lang && hljs.getLanguage(lang)) {\n  //     try {\n  //       return hljs.highlight(lang, str, true).value;\n  //     } catch (e) {\n  //       console.error(e);\n  //     }\n  //   }\n  //   return ''; // 使用额外的默认转义\n  // },\n\n}); // let hljsInited = false;\n\nconst Markdown = /*#__PURE__*/memo(({\n  isBase64,\n  content\n}) => {\n  const converted = isBase64 ? b64ToUtf8(content) : content;\n  const html = useMemo(() => md.render(converted), [converted]); // if (!hljsInited && typeof window !== 'undefined') {\n  //   hljs.initHighlightingOnLoad();\n  //   hljsInited = true;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"markdown-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: html\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n});\nexport default Markdown;","map":{"version":3,"sources":["E:/MyGit/github-demo/components/Markdown/index.jsx"],"names":["memo","useMemo","MarkdownIt","b64ToUtf8","str","decodeURIComponent","escape","atob","md","html","linkify","Markdown","isBase64","content","converted","render","__html"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,OAAf,QAA8B,OAA9B;AACA,OAAO,qBAAP;AACA,OAAOC,UAAP,MAAuB,aAAvB,C,CACA;AACA;AACA;;AACA,OAAO,qBAAP,C,CAEA;AACA;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,SAAOC,kBAAkB,CAACC,MAAM,CAACC,IAAI,CAACH,GAAD,CAAL,CAAP,CAAzB;AACD;;AAED,MAAMI,EAAE,GAAG,IAAIN,UAAJ,CAAe;AACxBO,EAAAA,IAAI,EAAE,IADkB;AACZ;AACZC,EAAAA,OAAO,EAAE,IAFe,CAET;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZwB,CAAf,CAAX,C,CAeA;;AACA,MAAMC,QAAQ,gBAAGX,IAAI,CAAC,CAAC;AAAEY,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAC/C,QAAMC,SAAS,GAAGF,QAAQ,GAAGT,SAAS,CAACU,OAAD,CAAZ,GAAwBA,OAAlD;AACA,QAAMJ,IAAI,GAAGR,OAAO,CAAC,MAAMO,EAAE,CAACO,MAAH,CAAUD,SAAV,CAAP,EAA6B,CAACA,SAAD,CAA7B,CAApB,CAF+C,CAI/C;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,uBAAuB,EAAE;AAAEE,QAAAA,MAAM,EAAEP;AAAV;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdoB,CAArB;AAgBA,eAAeE,QAAf","sourcesContent":["import { memo, useMemo } from 'react';\r\nimport 'github-markdown-css';\r\nimport MarkdownIt from 'markdown-it';\r\n// import hljs from 'highlight.js/lib/highlight';\r\n// import javascript from 'highlight.js/lib/languages/javascript';\r\n// import 'highlight.js/styles/default.css';\r\nimport 'github-markdown-css';\r\n\r\n// hljs.registerLanguage('javascript', javascript);\r\n// hljs.registerLanguage('js', javascript);\r\n\r\nfunction b64ToUtf8(str) {\r\n  return decodeURIComponent(escape(atob(str)));\r\n}\r\n\r\nconst md = new MarkdownIt({\r\n  html: true, // html文字也能正常转义成md\r\n  linkify: true, // 带http的可以自动变成链接\r\n  // highlight(str, lang) {\r\n  //   if (lang && hljs.getLanguage(lang)) {\r\n  //     try {\r\n  //       return hljs.highlight(lang, str, true).value;\r\n  //     } catch (e) {\r\n  //       console.error(e);\r\n  //     }\r\n  //   }\r\n  //   return ''; // 使用额外的默认转义\r\n  // },\r\n});\r\n\r\n// let hljsInited = false;\r\nconst Markdown = memo(({ isBase64, content }) => {\r\n  const converted = isBase64 ? b64ToUtf8(content) : content;\r\n  const html = useMemo(() => md.render(converted), [converted]);\r\n\r\n  // if (!hljsInited && typeof window !== 'undefined') {\r\n  //   hljs.initHighlightingOnLoad();\r\n  //   hljsInited = true;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"markdown-body\">\r\n      <div dangerouslySetInnerHTML={{ __html: html }} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Markdown;\r\n"]},"metadata":{},"sourceType":"module"}