{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\utils\\\\with-redux-app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport initializeStore from '../redux/store';\nconst isServer = true;\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\nfunction getOrCreateStore(initialState) {\n  if (isServer) {\n    // 服务端每次执行都重新创建一个store\n    return initializeStore(initialState);\n  } // 在客户端执行这个方法的时候 优先返回window上已有的store\n  // 而不能每次执行都重新创建一个store 否则状态就无限重置了\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default (Comp => {\n  y;\n\n  class withReduxApp extends React.Component {\n    constructor(props) {\n      super(props); // getInitialProps创建了store 这里为什么又重新创建一次？\n      // 因为服务端执行了getInitialProps之后 返回给客户端的是序列化后的字符串\n      // redux里有很多方法 不适合序列化存储\n      // 所以选择在getInitialProps返回initialReduxState初始的状态\n      // 再在这里通过initialReduxState去创建一个完整的store\n\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n\n    render() {\n      const _this$props = this.props,\n            {\n        Component,\n        pageProps\n      } = _this$props,\n            rest = _objectWithoutProperties(_this$props, [\"Component\", \"pageProps\"]);\n\n      return /*#__PURE__*/_jsxDEV(Comp, _objectSpread(_objectSpread({}, rest), {}, {\n        Component: Component,\n        pageProps: pageProps,\n        reduxStore: this.reduxStore\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    }\n\n  } // 这个其实是_app.js的getInitialProps\n  // 在服务端渲染和客户端路由跳转时会被执行\n  // 所以非常适合做redux-store的初始化\n\n\n  withReduxApp.getInitialProps = async ctx => {\n    let reduxStore;\n\n    if (isServer) {\n      const {\n        ctx: {\n          req\n        }\n      } = ctx;\n      const {\n        session\n      } = req;\n\n      if (session && session.userInfo) {\n        reduxStore = getOrCreateStore({\n          user: session.userInfo\n        });\n      } else {\n        reduxStore = getOrCreateStore();\n      }\n    } else {\n      reduxStore = getOrCreateStore();\n    }\n\n    ctx.reduxStore = reduxStore;\n    let appProps = {};\n\n    if (typeof Comp.getInitialProps === 'function') {\n      appProps = await Comp.getInitialProps(ctx);\n    }\n\n    return _objectSpread(_objectSpread({}, appProps), {}, {\n      initialReduxState: reduxStore.getState()\n    });\n  };\n\n  return withReduxApp;\n});","map":{"version":3,"sources":["E:/MyGit/github-demo/utils/with-redux-app.js"],"names":["React","initializeStore","isServer","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","Comp","y","withReduxApp","Component","constructor","props","reduxStore","initialReduxState","render","pageProps","rest","getInitialProps","ctx","req","session","userInfo","user","appProps","getState"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AAEA,MAAMC,QAAQ,OAAd;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC,MAAIH,QAAJ,EAAc;AACZ;AACA,WAAOD,eAAe,CAACI,YAAD,CAAtB;AACD,GAJqC,CAKtC;AACA;;;AACA,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AACjCG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BF,eAAe,CAACI,YAAD,CAA9C;AACD;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACD;;AAED,gBAAeI,IAAI,IAAI;AACrBC,EAAAA,CAAC;;AACD,QAAMC,YAAN,SAA2BT,KAAK,CAACU,SAAjC,CAA2C;AACzCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN,EADiB,CAEjB;AACA;AACA;AACA;AACA;;AACA,WAAKC,UAAL,GAAkBT,gBAAgB,CAACQ,KAAK,CAACE,iBAAP,CAAlC;AACD;;AAEDC,IAAAA,MAAM,GAAG;AACP,0BAA0C,KAAKH,KAA/C;AAAA,YAAM;AAAEF,QAAAA,SAAF;AAAaM,QAAAA;AAAb,OAAN;AAAA,YAAiCC,IAAjC;;AACA,0BACE,QAAC,IAAD,kCAAUA,IAAV;AAAgB,QAAA,SAAS,EAAEP,SAA3B;AAAsC,QAAA,SAAS,EAAEM,SAAjD;AAA4D,QAAA,UAAU,EAAE,KAAKH;AAA7E;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AAhBwC,GAFtB,CAqBrB;AACA;AACA;;;AACAJ,EAAAA,YAAY,CAACS,eAAb,GAA+B,MAAMC,GAAN,IAAa;AAC1C,QAAIN,UAAJ;;AAEA,QAAIX,QAAJ,EAAc;AACZ,YAAM;AACJiB,QAAAA,GAAG,EAAE;AAAEC,UAAAA;AAAF;AADD,UAEFD,GAFJ;AAGA,YAAM;AAAEE,QAAAA;AAAF,UAAcD,GAApB;;AACA,UAAIC,OAAO,IAAIA,OAAO,CAACC,QAAvB,EAAiC;AAC/BT,QAAAA,UAAU,GAAGT,gBAAgB,CAAC;AAC5BmB,UAAAA,IAAI,EAAEF,OAAO,CAACC;AADc,SAAD,CAA7B;AAGD,OAJD,MAIO;AACLT,QAAAA,UAAU,GAAGT,gBAAgB,EAA7B;AACD;AACF,KAZD,MAYO;AACLS,MAAAA,UAAU,GAAGT,gBAAgB,EAA7B;AACD;;AAEDe,IAAAA,GAAG,CAACN,UAAJ,GAAiBA,UAAjB;AAEA,QAAIW,QAAQ,GAAG,EAAf;;AACA,QAAI,OAAOjB,IAAI,CAACW,eAAZ,KAAgC,UAApC,EAAgD;AAC9CM,MAAAA,QAAQ,GAAG,MAAMjB,IAAI,CAACW,eAAL,CAAqBC,GAArB,CAAjB;AACD;;AAED,2CACKK,QADL;AAEEV,MAAAA,iBAAiB,EAAED,UAAU,CAACY,QAAX;AAFrB;AAID,GA9BD;;AAgCA,SAAOhB,YAAP;AACD,CAzDD","sourcesContent":["import React from 'react';\r\nimport initializeStore from '../redux/store';\r\n\r\nconst isServer = typeof window === 'undefined';\r\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\r\n\r\nfunction getOrCreateStore(initialState) {\r\n  if (isServer) {\r\n    // 服务端每次执行都重新创建一个store\r\n    return initializeStore(initialState);\r\n  }\r\n  // 在客户端执行这个方法的时候 优先返回window上已有的store\r\n  // 而不能每次执行都重新创建一个store 否则状态就无限重置了\r\n  if (!window[__NEXT_REDUX_STORE__]) {\r\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\r\n  }\r\n  return window[__NEXT_REDUX_STORE__];\r\n}\r\n\r\nexport default Comp => {\r\n  y;\r\n  class withReduxApp extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      // getInitialProps创建了store 这里为什么又重新创建一次？\r\n      // 因为服务端执行了getInitialProps之后 返回给客户端的是序列化后的字符串\r\n      // redux里有很多方法 不适合序列化存储\r\n      // 所以选择在getInitialProps返回initialReduxState初始的状态\r\n      // 再在这里通过initialReduxState去创建一个完整的store\r\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\r\n    }\r\n\r\n    render() {\r\n      const { Component, pageProps, ...rest } = this.props;\r\n      return (\r\n        <Comp {...rest} Component={Component} pageProps={pageProps} reduxStore={this.reduxStore} />\r\n      );\r\n    }\r\n  }\r\n\r\n  // 这个其实是_app.js的getInitialProps\r\n  // 在服务端渲染和客户端路由跳转时会被执行\r\n  // 所以非常适合做redux-store的初始化\r\n  withReduxApp.getInitialProps = async ctx => {\r\n    let reduxStore;\r\n\r\n    if (isServer) {\r\n      const {\r\n        ctx: { req },\r\n      } = ctx;\r\n      const { session } = req;\r\n      if (session && session.userInfo) {\r\n        reduxStore = getOrCreateStore({\r\n          user: session.userInfo,\r\n        });\r\n      } else {\r\n        reduxStore = getOrCreateStore();\r\n      }\r\n    } else {\r\n      reduxStore = getOrCreateStore();\r\n    }\r\n\r\n    ctx.reduxStore = reduxStore;\r\n\r\n    let appProps = {};\r\n    if (typeof Comp.getInitialProps === 'function') {\r\n      appProps = await Comp.getInitialProps(ctx);\r\n    }\r\n\r\n    return {\r\n      ...appProps,\r\n      initialReduxState: reduxStore.getState(),\r\n    };\r\n  };\r\n\r\n  return withReduxApp;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}