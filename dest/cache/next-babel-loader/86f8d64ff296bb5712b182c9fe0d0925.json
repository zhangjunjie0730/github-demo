{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\utils\\\\withReduxApp.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** 这个HOC的意义\r\n * 因为服务端执行了getInitialProps之后，返回给客户端的是序列化的字符串\r\n * redux里面有很多方法，不适合序列化存储\r\n * 所以在getInitialProps之后返回initialReduxState\r\n * 再通过initialReduxState去创建完整的store\r\n * 但是为了性能，客户端每次执行该方法的时候都去找一下window对象里面时候已经有了store\r\n */\nimport React from 'react';\nimport App from 'next/app';\nimport initializeStore from '../redux/store';\nvar isServer = false;\nvar __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'; // 存储在window中表示window已经有了store\n\nfunction getOrCreateStore(initialState) {\n  if (isServer) {\n    // 服务端执行时都重新创建一个store\n    return initializeStore(initialState);\n  }\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n/**\r\n * !!注意函数组件不成功！\r\n */\n\n\nvar withReduxApp = function withReduxApp(Comp) {\n  var withReduxApp = function withReduxApp(props) {\n    var Component = props.Component,\n        pageProps = props.pageProps,\n        initialReduxState = props.initialReduxState,\n        rest = _objectWithoutProperties(props, [\"Component\", \"pageProps\", \"initialReduxState\"]);\n\n    var reduxStore = getOrCreateStore(initialReduxState);\n    return /*#__PURE__*/_jsxDEV(Comp, _objectSpread(_objectSpread({}, rest), {}, {\n      Component: Component,\n      pageProps: pageProps,\n      reduxStore: reduxStore\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, _this);\n  };\n\n  withReduxApp.getInitialProps = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n      var reduxStore, req, session, appProps;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (isServer) {\n                req = ctx.ctx.req;\n                session = req.session;\n\n                if (session && session.userInfo) {\n                  reduxStore = getOrCreateStore({\n                    user: session.userInfo\n                  });\n                } else {\n                  reduxStore = getOrCreateStore();\n                }\n              } else {\n                reduxStore = getOrCreateStore();\n              }\n\n              ctx.reduxStore = reduxStore;\n              appProps = {};\n\n              if (!(typeof Comp.getInitialProps === 'function')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 6;\n              return Comp.getInitialProps(ctx);\n\n            case 6:\n              appProps = _context.sent;\n\n            case 7:\n              return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, appProps), {}, {\n                initialReduxState: reduxStore.getState()\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return withReduxApp;\n};\n\nexport default withReduxApp;","map":{"version":3,"sources":["E:/MyGit/github-demo/utils/withReduxApp.js"],"names":["React","App","initializeStore","isServer","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","withReduxApp","Comp","props","Component","pageProps","initialReduxState","rest","reduxStore","getInitialProps","ctx","req","session","userInfo","user","appProps","getState"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AAEA,IAAMC,QAAQ,QAAd;AACA,IAAMC,oBAAoB,GAAG,sBAA7B,C,CAAqD;;AAErD,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC,MAAIH,QAAJ,EAAc;AACZ;AACA,WAAOD,eAAe,CAACI,YAAD,CAAtB;AACD;;AACD,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AACjCG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BF,eAAe,CAACI,YAAD,CAA9C;AACD;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACD;AAED;AACA;AACA;;;AACA,IAAMI,YAAY,GAAG,sBAAAC,IAAI,EAAI;AAC3B,MAAMD,YAAY,GAAG,SAAfA,YAAe,CAAAE,KAAK,EAAI;AAAA,QACpBC,SADoB,GACiCD,KADjC,CACpBC,SADoB;AAAA,QACTC,SADS,GACiCF,KADjC,CACTE,SADS;AAAA,QACEC,iBADF,GACiCH,KADjC,CACEG,iBADF;AAAA,QACwBC,IADxB,4BACiCJ,KADjC;;AAE5B,QAAMK,UAAU,GAAGV,gBAAgB,CAACQ,iBAAD,CAAnC;AACA,wBAAO,QAAC,IAAD,kCAAUC,IAAV;AAAgB,MAAA,SAAS,EAAEH,SAA3B;AAAsC,MAAA,SAAS,EAAEC,SAAjD;AAA4D,MAAA,UAAU,EAAEG;AAAxE;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,GAJD;;AAMAP,EAAAA,YAAY,CAACQ,eAAb;AAAA,wEAA+B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAG7B,kBAAId,QAAJ,EAAc;AAEHe,gBAAAA,GAFG,GAGRD,GAHQ,CAEVA,GAFU,CAEHC,GAFG;AAIJC,gBAAAA,OAJI,GAIQD,GAJR,CAIJC,OAJI;;AAKZ,oBAAIA,OAAO,IAAIA,OAAO,CAACC,QAAvB,EAAiC;AAC/BL,kBAAAA,UAAU,GAAGV,gBAAgB,CAAC;AAC5BgB,oBAAAA,IAAI,EAAEF,OAAO,CAACC;AADc,mBAAD,CAA7B;AAGD,iBAJD,MAIO;AACLL,kBAAAA,UAAU,GAAGV,gBAAgB,EAA7B;AACD;AACF,eAZD,MAYO;AACLU,gBAAAA,UAAU,GAAGV,gBAAgB,EAA7B;AACD;;AAEDY,cAAAA,GAAG,CAACF,UAAJ,GAAiBA,UAAjB;AAEIO,cAAAA,QArByB,GAqBd,EArBc;;AAAA,oBAsBzB,OAAOb,IAAI,CAACO,eAAZ,KAAgC,UAtBP;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAuBVP,IAAI,CAACO,eAAL,CAAqBC,GAArB,CAvBU;;AAAA;AAuB3BK,cAAAA,QAvB2B;;AAAA;AAAA,+EA2BxBA,QA3BwB;AA4B3BT,gBAAAA,iBAAiB,EAAEE,UAAU,CAACQ,QAAX;AA5BQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B;;AAAA;AAAA;AAAA;AAAA;;AAgCA,SAAOf,YAAP;AACD,CAxCD;;AAyCA,eAAeA,YAAf","sourcesContent":["/** 这个HOC的意义\r\n * 因为服务端执行了getInitialProps之后，返回给客户端的是序列化的字符串\r\n * redux里面有很多方法，不适合序列化存储\r\n * 所以在getInitialProps之后返回initialReduxState\r\n * 再通过initialReduxState去创建完整的store\r\n * 但是为了性能，客户端每次执行该方法的时候都去找一下window对象里面时候已经有了store\r\n */\r\nimport React from 'react';\r\nimport App from 'next/app';\r\nimport initializeStore from '../redux/store';\r\n\r\nconst isServer = typeof window === 'undefined';\r\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'; // 存储在window中表示window已经有了store\r\n\r\nfunction getOrCreateStore(initialState) {\r\n  if (isServer) {\r\n    // 服务端执行时都重新创建一个store\r\n    return initializeStore(initialState);\r\n  }\r\n  if (!window[__NEXT_REDUX_STORE__]) {\r\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\r\n  }\r\n  return window[__NEXT_REDUX_STORE__];\r\n}\r\n\r\n/**\r\n * !!注意函数组件不成功！\r\n */\r\nconst withReduxApp = Comp => {\r\n  const withReduxApp = props => {\r\n    const { Component, pageProps, initialReduxState, ...rest } = props;\r\n    const reduxStore = getOrCreateStore(initialReduxState);\r\n    return <Comp {...rest} Component={Component} pageProps={pageProps} reduxStore={reduxStore} />;\r\n  };\r\n\r\n  withReduxApp.getInitialProps = async ctx => {\r\n    let reduxStore;\r\n\r\n    if (isServer) {\r\n      const {\r\n        ctx: { req },\r\n      } = ctx;\r\n      const { session } = req;\r\n      if (session && session.userInfo) {\r\n        reduxStore = getOrCreateStore({\r\n          user: session.userInfo,\r\n        });\r\n      } else {\r\n        reduxStore = getOrCreateStore();\r\n      }\r\n    } else {\r\n      reduxStore = getOrCreateStore();\r\n    }\r\n\r\n    ctx.reduxStore = reduxStore;\r\n\r\n    let appProps = {};\r\n    if (typeof Comp.getInitialProps === 'function') {\r\n      appProps = await Comp.getInitialProps(ctx);\r\n    }\r\n\r\n    return {\r\n      ...appProps,\r\n      initialReduxState: reduxStore.getState(),\r\n    };\r\n  };\r\n\r\n  return withReduxApp;\r\n};\r\nexport default withReduxApp;\r\n"]},"metadata":{},"sourceType":"module"}