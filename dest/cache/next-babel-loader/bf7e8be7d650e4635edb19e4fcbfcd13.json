{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\components\\\\SearchUser\\\\index.jsx\";\nimport { Select, Spin } from 'antd';\nimport { debounce } from 'lodash';\nimport { useCallback, useRef, useState } from 'react';\nimport { request } from '../../utils/api';\n\nfunction SearchUser({\n  onChange,\n  value\n}) {\n  const {\n    0: fetching,\n    1: setFetching\n  } = useState(false);\n  const {\n    0: options,\n    1: setOptions\n  } = useState([]); // 对比前后请求id是否相同，如果不同说明网络延迟有多次请求，当前的请求作废\n\n  const lastFetchIdRef = useRef(0);\n  const fetchUser = useCallback(debounce(async (searchValue, fetchId) => {\n    setFetching(true);\n    setOptions([]);\n    const {\n      data\n    } = await request({\n      url: `/search/user?q=${searchValue}`\n    }); // 客户端发送请求就不需要req和res了\n\n    const userOptions = data.items.map(user => ({\n      text: user.login,\n      value: user.login\n    }));\n\n    if (fetchId === lastFetchIdRef.current) {\n      setOptions(userOptions);\n    } else {\n      // 不相等跳过当前请求，继续下一次发送\n      setOptions([]);\n    }\n\n    setFetching(false);\n  }, 500), []);\n\n  const fetchUserBefore = searchValue => {\n    lastFetchIdRef.current += 1;\n    if (searchValue.trim()) return fetchUser(searchValue, lastFetchIdRef.current);\n    return null;\n  };\n\n  const handleChange = searchValue => {\n    onChange(searchValue);\n    setOptions([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    allowClear: true,\n    showSearch: true,\n    value: value,\n    onChange: handleChange,\n    onSearch: fetchUserBefore,\n    notFoundContent: fetching ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 59\n    }, this),\n    filterOption: false // 禁用本地搜索\n    ,\n    placeholder: \"\\u521B\\u5EFA\\u8005\",\n    children: options.map(option => /*#__PURE__*/_jsxDEV(Select.Option, {\n      value: option.value,\n      children: option.text\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\nexport default SearchUser;","map":{"version":3,"sources":["E:/MyGit/github-demo/components/SearchUser/index.jsx"],"names":["Select","Spin","debounce","useCallback","useRef","useState","request","SearchUser","onChange","value","fetching","setFetching","options","setOptions","lastFetchIdRef","fetchUser","searchValue","fetchId","data","url","userOptions","items","map","user","text","login","current","fetchUserBefore","trim","handleChange","option"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAApB,EAAyC;AACvC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,EAAD,CAAtC,CAFuC,CAGvC;;AACA,QAAMS,cAAc,GAAGV,MAAM,CAAC,CAAD,CAA7B;AAEA,QAAMW,SAAS,GAAGZ,WAAW,CAC3BD,QAAQ,CAAC,OAAOc,WAAP,EAAoBC,OAApB,KAAgC;AACvCN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMZ,OAAO,CAAC;AAAEa,MAAAA,GAAG,EAAG,kBAAiBH,WAAY;AAArC,KAAD,CAA9B,CAHuC,CAGmC;;AAC1E,UAAMI,WAAW,GAAGF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAeC,IAAI,KAAK;AAAEC,MAAAA,IAAI,EAAED,IAAI,CAACE,KAAb;AAAoBhB,MAAAA,KAAK,EAAEc,IAAI,CAACE;AAAhC,KAAL,CAAnB,CAApB;;AAEA,QAAIR,OAAO,KAAKH,cAAc,CAACY,OAA/B,EAAwC;AACtCb,MAAAA,UAAU,CAACO,WAAD,CAAV;AACD,KAFD,MAEO;AACL;AACAP,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AACDF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAbO,EAaL,GAbK,CADmB,EAe3B,EAf2B,CAA7B;;AAkBA,QAAMgB,eAAe,GAAGX,WAAW,IAAI;AACrCF,IAAAA,cAAc,CAACY,OAAf,IAA0B,CAA1B;AACA,QAAIV,WAAW,CAACY,IAAZ,EAAJ,EAAwB,OAAOb,SAAS,CAACC,WAAD,EAAcF,cAAc,CAACY,OAA7B,CAAhB;AACxB,WAAO,IAAP;AACD,GAJD;;AAMA,QAAMG,YAAY,GAAGb,WAAW,IAAI;AAClCR,IAAAA,QAAQ,CAACQ,WAAD,CAAR;AACAH,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAHD;;AAKA,sBACE,QAAC,MAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,KAAK,EAAEJ,KAHT;AAIE,IAAA,QAAQ,EAAEoB,YAJZ;AAKE,IAAA,QAAQ,EAAEF,eALZ;AAME,IAAA,eAAe,EAAEjB,QAAQ,gBAAG,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANtD;AAOE,IAAA,YAAY,EAAE,KAPhB,CAOuB;AAPvB;AAQE,IAAA,WAAW,EAAC,oBARd;AAAA,cAUGE,OAAO,CAACU,GAAR,CAAYQ,MAAM,iBACjB,QAAC,MAAD,CAAQ,MAAR;AAAkC,MAAA,KAAK,EAAEA,MAAM,CAACrB,KAAhD;AAAA,gBACGqB,MAAM,CAACN;AADV,OAAoBM,MAAM,CAACrB,KAA3B;AAAA;AAAA;AAAA;AAAA,YADD;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;AAED,eAAeF,UAAf","sourcesContent":["import { Select, Spin } from 'antd';\r\nimport { debounce } from 'lodash';\r\nimport { useCallback, useRef, useState } from 'react';\r\nimport { request } from '../../utils/api';\r\n\r\nfunction SearchUser({ onChange, value }) {\r\n  const [fetching, setFetching] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  // 对比前后请求id是否相同，如果不同说明网络延迟有多次请求，当前的请求作废\r\n  const lastFetchIdRef = useRef(0);\r\n\r\n  const fetchUser = useCallback(\r\n    debounce(async (searchValue, fetchId) => {\r\n      setFetching(true);\r\n      setOptions([]);\r\n      const { data } = await request({ url: `/search/user?q=${searchValue}` }); // 客户端发送请求就不需要req和res了\r\n      const userOptions = data.items.map(user => ({ text: user.login, value: user.login }));\r\n\r\n      if (fetchId === lastFetchIdRef.current) {\r\n        setOptions(userOptions);\r\n      } else {\r\n        // 不相等跳过当前请求，继续下一次发送\r\n        setOptions([]);\r\n      }\r\n      setFetching(false);\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const fetchUserBefore = searchValue => {\r\n    lastFetchIdRef.current += 1;\r\n    if (searchValue.trim()) return fetchUser(searchValue, lastFetchIdRef.current);\r\n    return null;\r\n  };\r\n\r\n  const handleChange = searchValue => {\r\n    onChange(searchValue);\r\n    setOptions([]);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      allowClear\r\n      showSearch\r\n      value={value}\r\n      onChange={handleChange}\r\n      onSearch={fetchUserBefore}\r\n      notFoundContent={fetching ? <Spin size=\"small\" /> : <span>not found</span>}\r\n      filterOption={false} // 禁用本地搜索\r\n      placeholder=\"创建者\"\r\n    >\r\n      {options.map(option => (\r\n        <Select.Option key={option.value} value={option.value}>\r\n          {option.text}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nexport default SearchUser;\r\n"]},"metadata":{},"sourceType":"module"}