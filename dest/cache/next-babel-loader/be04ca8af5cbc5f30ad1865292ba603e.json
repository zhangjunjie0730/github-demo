{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\detail\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport DetailLayout from '../../components/DetailLayout';\nimport { request } from '../../utils/api';\nimport initClientCache from '../../utils/client-cache';\nimport { genDetailCacheKeyStrate, genDetailCacheKey } from '../../utils';\nimport Markdown from '../../components/Markdown';\n\nvar _initClientCache = initClientCache({\n  genCacheKeyStrate: genDetailCacheKeyStrate\n}),\n    cache = _initClientCache.cache,\n    useCache = _initClientCache.useCache;\n\nfunction Detail(_ref) {\n  _s();\n\n  var readme = _ref.readme;\n  var router = useRouter();\n  useCache(genDetailCacheKey(router), {\n    readme: readme\n  });\n  return /*#__PURE__*/_jsxDEV(Markdown, {\n    isBase64: true,\n    content: readme.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Detail, \"8JhvFu5bAz2+TziAaRl0Dnts1Fw=\", false, function () {\n  return [useRouter, useCache];\n});\n\n_c = Detail;\nDetail.getInitialProps = cache( /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, _ctx$query, owner, name, req, res, _yield$request, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx;\n            _ctx$query = ctx.query, owner = _ctx$query.owner, name = _ctx$query.name, req = ctx.req, res = ctx.res;\n            _context.next = 4;\n            return request({\n              url: \"/repos/\".concat(owner, \"/\").concat(name, \"/readme\")\n            }, req, res);\n\n          case 4:\n            _yield$request = _context.sent;\n            data = _yield$request.data;\n            return _context.abrupt(\"return\", {\n              readme: data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nexport default _c2 = DetailLayout(Detail);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Detail\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/detail/index.jsx"],"names":["useRouter","DetailLayout","request","initClientCache","genDetailCacheKeyStrate","genDetailCacheKey","Markdown","genCacheKeyStrate","cache","useCache","Detail","readme","router","content","getInitialProps","ctx","query","owner","name","req","res","url","data"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,uBAAT,EAAkCC,iBAAlC,QAA2D,aAA3D;AACA,OAAOC,QAAP,MAAqB,2BAArB;;uBAE4BH,eAAe,CAAC;AAC1CI,EAAAA,iBAAiB,EAAEH;AADuB,CAAD,C;IAAnCI,K,oBAAAA,K;IAAOC,Q,oBAAAA,Q;;AAIf,SAASC,MAAT,OAA4B;AAAA;;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC1B,MAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACAS,EAAAA,QAAQ,CAACJ,iBAAiB,CAACO,MAAD,CAAlB,EAA4B;AAAED,IAAAA,MAAM,EAANA;AAAF,GAA5B,CAAR;AAEA,sBAAO,QAAC,QAAD;AAAU,IAAA,QAAQ,MAAlB;AAAmB,IAAA,OAAO,EAAEA,MAAM,CAACE;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GALQH,M;UACQV,S,EACfS,Q;;;KAFOC,M;AAOTA,MAAM,CAACI,eAAP,GAAyBN,KAAK;AAAA,uEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASO,YAAAA,GAAT,SAASA,GAAT;AAAA,yBAKzBA,GALyB,CAE3BC,KAF2B,EAElBC,KAFkB,cAElBA,KAFkB,EAEXC,IAFW,cAEXA,IAFW,EAG3BC,GAH2B,GAKzBJ,GALyB,CAG3BI,GAH2B,EAI3BC,GAJ2B,GAKzBL,GALyB,CAI3BK,GAJ2B;AAAA;AAAA,mBAONlB,OAAO,CAAC;AAAEmB,cAAAA,GAAG,mBAAYJ,KAAZ,cAAqBC,IAArB;AAAL,aAAD,EAA4CC,GAA5C,EAAiDC,GAAjD,CAPD;;AAAA;AAAA;AAOrBE,YAAAA,IAPqB,kBAOrBA,IAPqB;AAAA,6CAStB;AACLX,cAAAA,MAAM,EAAEW;AADH,aATsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA9B;AAcA,qBAAerB,YAAY,CAACS,MAAD,CAA3B","sourcesContent":["import { useRouter } from 'next/router';\r\nimport DetailLayout from '../../components/DetailLayout';\r\nimport { request } from '../../utils/api';\r\nimport initClientCache from '../../utils/client-cache';\r\nimport { genDetailCacheKeyStrate, genDetailCacheKey } from '../../utils';\r\nimport Markdown from '../../components/Markdown';\r\n\r\nconst { cache, useCache } = initClientCache({\r\n  genCacheKeyStrate: genDetailCacheKeyStrate,\r\n});\r\n\r\nfunction Detail({ readme }) {\r\n  const router = useRouter();\r\n  useCache(genDetailCacheKey(router), { readme });\r\n\r\n  return <Markdown isBase64 content={readme.content} />;\r\n}\r\n\r\nDetail.getInitialProps = cache(async ({ ctx }) => {\r\n  const {\r\n    query: { owner, name },\r\n    req,\r\n    res,\r\n  } = ctx;\r\n\r\n  const { data } = await request({ url: `/repos/${owner}/${name}/readme` }, req, res);\r\n\r\n  return {\r\n    readme: data,\r\n  };\r\n});\r\n\r\nexport default DetailLayout(Detail);\r\n"]},"metadata":{},"sourceType":"module"}