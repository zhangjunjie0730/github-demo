{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\components\\\\SearchInput\\\\index.jsx\";\nimport { withRouter } from 'next/router';\nimport { Input } from 'antd';\nimport { useCallback, useState } from 'react';\n\nconst SearchInput = ({\n  router\n}) => {\n  const urlQuery = router.query && router.query.query; // 得到当前路由的参数，如果直接输入地址，自动将检索内容加入到搜索框\n\n  const {\n    0: search,\n    1: setSearch\n  } = useState(urlQuery || '');\n  const handleSearchChange = useCallback(e => setSearch(e.target.value), []); // 因为依赖于setSearch，而这个方法是不会改变的，所以可以直接传[]\n\n  const handleOnSearch = useCallback(() => router.push(`/search?query=${search}`), [search]);\n  return /*#__PURE__*/_jsxDEV(Input.Search, {\n    onChange: handleSearchChange,\n    onSearch: handleOnSearch,\n    value: search,\n    placeholder: \"search...\",\n    style: {\n      paddingTop: '17px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withRouter(SearchInput);","map":{"version":3,"sources":["E:/MyGit/github-demo/components/SearchInput/index.jsx"],"names":["withRouter","Input","useCallback","useState","SearchInput","router","urlQuery","query","search","setSearch","handleSearchChange","e","target","value","handleOnSearch","push","paddingTop"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAClC,QAAMC,QAAQ,GAAGD,MAAM,CAACE,KAAP,IAAgBF,MAAM,CAACE,KAAP,CAAaA,KAA9C,CADkC,CACmB;;AACrD,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAACG,QAAQ,IAAI,EAAb,CAApC;AAEA,QAAMI,kBAAkB,GAAGR,WAAW,CAACS,CAAC,IAAIF,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EAAiC,EAAjC,CAAtC,CAJkC,CAI0C;;AAC5E,QAAMC,cAAc,GAAGZ,WAAW,CAAC,MAAMG,MAAM,CAACU,IAAP,CAAa,iBAAgBP,MAAO,EAApC,CAAP,EAA+C,CAACA,MAAD,CAA/C,CAAlC;AAEA,sBACE,QAAC,KAAD,CAAO,MAAP;AACE,IAAA,QAAQ,EAAEE,kBADZ;AAEE,IAAA,QAAQ,EAAEI,cAFZ;AAGE,IAAA,KAAK,EAAEN,MAHT;AAIE,IAAA,WAAW,EAAC,WAJd;AAKE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,UAAU,EAAE;AAAd;AALT;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhBD;;AAiBA,eAAehB,UAAU,CAACI,WAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\r\nimport { Input } from 'antd';\r\nimport { useCallback, useState } from 'react';\r\n\r\nconst SearchInput = ({ router }) => {\r\n  const urlQuery = router.query && router.query.query; // 得到当前路由的参数，如果直接输入地址，自动将检索内容加入到搜索框\r\n  const [search, setSearch] = useState(urlQuery || '');\r\n\r\n  const handleSearchChange = useCallback(e => setSearch(e.target.value), []); // 因为依赖于setSearch，而这个方法是不会改变的，所以可以直接传[]\r\n  const handleOnSearch = useCallback(() => router.push(`/search?query=${search}`), [search]);\r\n\r\n  return (\r\n    <Input.Search\r\n      onChange={handleSearchChange}\r\n      onSearch={handleOnSearch}\r\n      value={search}\r\n      placeholder=\"search...\"\r\n      style={{ paddingTop: '17px' }}\r\n    />\r\n  );\r\n};\r\nexport default withRouter(SearchInput);\r\n"]},"metadata":{},"sourceType":"module"}