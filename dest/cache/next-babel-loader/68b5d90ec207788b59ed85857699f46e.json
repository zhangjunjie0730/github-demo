{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\search.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { withRouter } from 'next/router';\nimport classNames from 'classnames';\nimport initCache from '../utils/client-cache';\nimport { request } from '../utils/api';\nimport { LANGUAGES, SORT_TYPES } from '../config';\nimport FilterLink from '../components/FilterLink';\nimport { Row, Col, List } from 'antd';\n/**\r\n * search条件：\r\n * sort: 排序方式\r\n * order: 排序升降顺序\r\n * lang: 仓库开发主语言\r\n * page: 分页\r\n */\n// const { cache, useCache } = initCache({\n//   genCacheKeyStrate: context => genCacheKeyStrate(context.ctx.query),\n// });\n\nvar Search = function Search(_ref) {\n  var router = _ref.router,\n      repos = _ref.repos;\n  var query = router.query;\n  var sort = query.sort,\n      order = query.order,\n      lang = query.lang,\n      _query$page = query.page,\n      page = _query$page === void 0 ? 1 : _query$page;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 20,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          bordered: true,\n          style: {\n            marginBottom: 20\n          },\n          dataSource: LANGUAGES,\n          header: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"list-header\",\n            children: \"\\u8BED\\u8A00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, _this),\n          renderItem: function renderItem(language) {\n            var selected = lang === language;\n            return /*#__PURE__*/_jsxDEV(List.Item, {\n              className: classNames({\n                selected: selected\n              }),\n              children: /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, router.query), {}, {\n                selected: selected,\n                lang: language,\n                children: language\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Search;\n\nSearch.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, _ctx$query, query, sort, lang, _ctx$query$order, order, page, queryString, result;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx;\n            _ctx$query = ctx.query, query = _ctx$query.query, sort = _ctx$query.sort, lang = _ctx$query.lang, _ctx$query$order = _ctx$query.order, order = _ctx$query$order === void 0 ? 'desc' : _ctx$query$order, page = _ctx$query.page;\n\n            if (query) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              repos: {\n                total_count: 0\n              }\n            });\n\n          case 4:\n            queryString = \"?q=\".concat(query);\n            lang && (queryString += \"+language:\".concat(lang));\n            sort && (queryString += \"&sort=\".concat(sort, \"&order=\").concat(order));\n            page && (queryString += \"&page=\".concat(page));\n            _context.next = 10;\n            return request({\n              url: \"/search/repositories\".concat(queryString)\n            }, ctx.req, ctx.res);\n\n          case 10:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              repos: result.data\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withRouter(Search);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/search.jsx"],"names":["withRouter","classNames","initCache","request","LANGUAGES","SORT_TYPES","FilterLink","Row","Col","List","Search","router","repos","query","sort","order","lang","page","marginBottom","language","selected","getInitialProps","ctx","total_count","queryString","url","req","res","result","data"],"mappings":"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","sourcesContent":["import { withRouter } from 'next/router';\r\nimport classNames from 'classnames';\r\nimport initCache from '../utils/client-cache';\r\nimport { request } from '../utils/api';\r\nimport { LANGUAGES, SORT_TYPES } from '../config';\r\nimport FilterLink from '../components/FilterLink';\r\nimport { Row, Col, List } from 'antd';\r\n\r\n/**\r\n * search条件：\r\n * sort: 排序方式\r\n * order: 排序升降顺序\r\n * lang: 仓库开发主语言\r\n * page: 分页\r\n */\r\n\r\n// const { cache, useCache } = initCache({\r\n//   genCacheKeyStrate: context => genCacheKeyStrate(context.ctx.query),\r\n// });\r\n\r\nconst Search = ({ router, repos }) => {\r\n  const { query } = router;\r\n  const { sort, order, lang, page = 1 } = query;\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Row gutter={20}>\r\n        <Col span={6}>\r\n          {/* Language Categories */}\r\n          <List\r\n            bordered\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={LANGUAGES}\r\n            header={<span className=\"list-header\">语言</span>}\r\n            renderItem={language => {\r\n              const selected = lang === language;\r\n              return (\r\n                <List.Item className={classNames({ selected })}>\r\n                  <FilterLink {...router.query} selected={selected} lang={language}>\r\n                    {language}\r\n                  </FilterLink>\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n          {/* Sort Categories */}\r\n          <List />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.getInitialProps = async ({ ctx }) => {\r\n  const { query, sort, lang, order = 'desc', page } = ctx.query;\r\n  if (!query) return { repos: { total_count: 0 } };\r\n\r\n  let queryString = `?q=${query}`;\r\n  lang && (queryString += `+language:${lang}`);\r\n  sort && (queryString += `&sort=${sort}&order=${order}`);\r\n  page && (queryString += `&page=${page}`);\r\n\r\n  const result = await request(\r\n    {\r\n      url: `/search/repositories${queryString}`,\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n  return {\r\n    repos: result.data,\r\n  };\r\n};\r\n\r\nexport default withRouter(Search);\r\n"]},"metadata":{},"sourceType":"module"}