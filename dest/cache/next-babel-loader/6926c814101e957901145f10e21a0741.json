{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\search.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { withRouter } from 'next/router';\nimport classNames from 'classnames';\nimport { Row, Col, List, Pagination } from 'antd';\nimport initCache from '../utils/client-cache';\nimport { request } from '../utils/api';\nimport { LANGUAGES, SORT_TYPES, PER_PAGE } from '../config';\nimport FilterLink from '../components/FilterLink';\nimport Repo from '../components/Repo';\nimport { genCacheKeyByQuery } from '../utils';\n/**\r\n * search条件：\r\n * sort: 排序方式\r\n * order: 排序升降顺序\r\n * lang: 仓库开发主语言\r\n * page: 分页\r\n */\n\nconst {\n  cache,\n  useCache\n} = initCache({\n  genCacheKeyStrate: context => genCacheKeyByQuery(context.ctx.query)\n});\n\nconst Search = ({\n  router,\n  repos\n}) => {\n  const {\n    query\n  } = router;\n  const {\n    sort,\n    order,\n    lang,\n    page = 1\n  } = query;\n  useCache();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jsx-2801659865\" + \" \" + \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 20,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          bordered: true,\n          style: {\n            marginBottom: 20\n          },\n          dataSource: LANGUAGES,\n          header: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"jsx-2801659865\" + \" \" + \"list-header\",\n            children: \"\\u8BED\\u8A00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this),\n          renderItem: langItem => {\n            const selected = lang === langItem;\n            return /*#__PURE__*/_jsxDEV(List.Item, {\n              className: selected ? 'selected' : null,\n              children: /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, router.query), {}, {\n                selected: selected,\n                lang: langItem,\n                children: langItem\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          bordered: true,\n          style: {\n            marginBottom: 20\n          },\n          dataSource: SORT_TYPES,\n          header: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"jsx-2801659865\" + \" \" + \"list-header\",\n            children: \"\\u6392\\u5E8F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this),\n          renderItem: item => {\n            let selected = false; // 1.当没有sort时，默认是BestMatch；2.有sort且有order(有默认值dest)时\n\n            if (item.name === 'Best Match' && !sort || item.sort === sort && item.order === order) {\n              selected = true;\n            }\n\n            return /*#__PURE__*/_jsxDEV(List.Item, {\n              className: selected ? 'selected' : null,\n              children: /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, router.query), {}, {\n                selected: selected,\n                sort: item.sort,\n                order: item.order,\n                children: item.name\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 18,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"jsx-2801659865\" + \" \" + \"repos-title\",\n          children: [repos.total_count, \"\\u4E2A\\u4ED3\\u5E93\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), repos.items.map(repo => /*#__PURE__*/_jsxDEV(Repo, {\n          repo: repo\n        }, repo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jsx-2801659865\" + \" \" + \"pagination\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            pageSize: PER_PAGE,\n            current: Number(page) || 1 // github api限制请求前1000条\n            ,\n            total: Math.min(repos.total_count, 1000) // 我们用url来控制分页，所以不需要这个onChange，但是一定要传\n            ,\n            onChange: () => {},\n            itemRender: (renderPage, renderType, renderOl) => {\n              const targetPage = renderType === 'page' ? renderPage : renderType === 'prev' ? page - 1 : page + 1;\n              const name = renderType === 'page' ? renderPage : renderOl;\n              return /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, router.query), {}, {\n                page: targetPage,\n                children: name\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2801659865\",\n      children: \".ant-list-item.selected{border-left:2px solid #e36209;font-weight:100;}.root.jsx-2801659865{padding:20px 0;}.list-header.jsx-2801659865{font-weight:800;font-size:16px;}.repos-title.jsx-2801659865{border-bottom:1px solid #eee;font-size:24px;line-height:50px;}.pagination.jsx-2801659865{margin-top:16px;text-align:right;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6XFxNeUdpdFxcZ2l0aHViLWRlbW9cXHBhZ2VzXFxzZWFyY2guanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRHUyxBQUcyQyxBQUlmLEFBR0MsQUFJYSxBQUtiLGVBWGxCLENBR2lCLEFBU0UsYUFMRixDQVhDLENBUWxCLEVBU0EsV0FMbUIsRUFYbkIsZUFZQSIsImZpbGUiOiJFOlxcTXlHaXRcXGdpdGh1Yi1kZW1vXFxwYWdlc1xcc2VhcmNoLmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdpdGhSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcic7XHJcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xyXG5pbXBvcnQgeyBSb3csIENvbCwgTGlzdCwgUGFnaW5hdGlvbiB9IGZyb20gJ2FudGQnO1xyXG5pbXBvcnQgaW5pdENhY2hlIGZyb20gJy4uL3V0aWxzL2NsaWVudC1jYWNoZSc7XHJcbmltcG9ydCB7IHJlcXVlc3QgfSBmcm9tICcuLi91dGlscy9hcGknO1xyXG5pbXBvcnQgeyBMQU5HVUFHRVMsIFNPUlRfVFlQRVMsIFBFUl9QQUdFIH0gZnJvbSAnLi4vY29uZmlnJztcclxuaW1wb3J0IEZpbHRlckxpbmsgZnJvbSAnLi4vY29tcG9uZW50cy9GaWx0ZXJMaW5rJztcclxuaW1wb3J0IFJlcG8gZnJvbSAnLi4vY29tcG9uZW50cy9SZXBvJztcclxuaW1wb3J0IHsgZ2VuQ2FjaGVLZXlCeVF1ZXJ5IH0gZnJvbSAnLi4vdXRpbHMnO1xyXG5cclxuLyoqXHJcbiAqIHNlYXJjaOadoeS7tu+8mlxyXG4gKiBzb3J0OiDmjpLluo/mlrnlvI9cclxuICogb3JkZXI6IOaOkuW6j+WNh+mZjemhuuW6j1xyXG4gKiBsYW5nOiDku5PlupPlvIDlj5HkuLvor63oqIBcclxuICogcGFnZTog5YiG6aG1XHJcbiAqL1xyXG5cclxuY29uc3QgeyBjYWNoZSwgdXNlQ2FjaGUgfSA9IGluaXRDYWNoZSh7XHJcbiAgZ2VuQ2FjaGVLZXlTdHJhdGU6IGNvbnRleHQgPT4gZ2VuQ2FjaGVLZXlCeVF1ZXJ5KGNvbnRleHQuY3R4LnF1ZXJ5KSxcclxufSk7XHJcblxyXG5jb25zdCBTZWFyY2ggPSAoeyByb3V0ZXIsIHJlcG9zIH0pID0+IHtcclxuICBjb25zdCB7IHF1ZXJ5IH0gPSByb3V0ZXI7XHJcbiAgY29uc3QgeyBzb3J0LCBvcmRlciwgbGFuZywgcGFnZSA9IDEgfSA9IHF1ZXJ5O1xyXG5cclxuICB1c2VDYWNoZSgpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9XCJyb290XCI+XHJcbiAgICAgIDxSb3cgZ3V0dGVyPXsyMH0+XHJcbiAgICAgICAgPENvbCBzcGFuPXs2fT5cclxuICAgICAgICAgIDxMaXN0XHJcbiAgICAgICAgICAgIGJvcmRlcmVkXHJcbiAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpbkJvdHRvbTogMjAgfX1cclxuICAgICAgICAgICAgZGF0YVNvdXJjZT17TEFOR1VBR0VTfVxyXG4gICAgICAgICAgICBoZWFkZXI9ezxzcGFuIGNsYXNzTmFtZT1cImxpc3QtaGVhZGVyXCI+6K+t6KiAPC9zcGFuPn1cclxuICAgICAgICAgICAgcmVuZGVySXRlbT17bGFuZ0l0ZW0gPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkID0gbGFuZyA9PT0gbGFuZ0l0ZW07XHJcblxyXG4gICAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8TGlzdC5JdGVtIGNsYXNzTmFtZT17c2VsZWN0ZWQgPyAnc2VsZWN0ZWQnIDogbnVsbH0+XHJcbiAgICAgICAgICAgICAgICAgIDxGaWx0ZXJMaW5rIHsuLi5yb3V0ZXIucXVlcnl9IHNlbGVjdGVkPXtzZWxlY3RlZH0gbGFuZz17bGFuZ0l0ZW19PlxyXG4gICAgICAgICAgICAgICAgICAgIHtsYW5nSXRlbX1cclxuICAgICAgICAgICAgICAgICAgPC9GaWx0ZXJMaW5rPlxyXG4gICAgICAgICAgICAgICAgPC9MaXN0Lkl0ZW0+XHJcbiAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgfX1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8TGlzdFxyXG4gICAgICAgICAgICBib3JkZXJlZFxyXG4gICAgICAgICAgICBzdHlsZT17eyBtYXJnaW5Cb3R0b206IDIwIH19XHJcbiAgICAgICAgICAgIGRhdGFTb3VyY2U9e1NPUlRfVFlQRVN9XHJcbiAgICAgICAgICAgIGhlYWRlcj17PHNwYW4gY2xhc3NOYW1lPVwibGlzdC1oZWFkZXJcIj7mjpLluo88L3NwYW4+fVxyXG4gICAgICAgICAgICByZW5kZXJJdGVtPXtpdGVtID0+IHtcclxuICAgICAgICAgICAgICBsZXQgc2VsZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAvLyAxLuW9k+ayoeaciXNvcnTml7bvvIzpu5jorqTmmK9CZXN0TWF0Y2jvvJsyLuaciXNvcnTkuJTmnIlvcmRlcijmnInpu5jorqTlgLxkZXN0KeaXtlxyXG4gICAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICAgIChpdGVtLm5hbWUgPT09ICdCZXN0IE1hdGNoJyAmJiAhc29ydCkgfHxcclxuICAgICAgICAgICAgICAgIChpdGVtLnNvcnQgPT09IHNvcnQgJiYgaXRlbS5vcmRlciA9PT0gb3JkZXIpXHJcbiAgICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8TGlzdC5JdGVtIGNsYXNzTmFtZT17c2VsZWN0ZWQgPyAnc2VsZWN0ZWQnIDogbnVsbH0+XHJcbiAgICAgICAgICAgICAgICAgIDxGaWx0ZXJMaW5rXHJcbiAgICAgICAgICAgICAgICAgICAgey4uLnJvdXRlci5xdWVyeX1cclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZD17c2VsZWN0ZWR9XHJcbiAgICAgICAgICAgICAgICAgICAgc29ydD17aXRlbS5zb3J0fVxyXG4gICAgICAgICAgICAgICAgICAgIG9yZGVyPXtpdGVtLm9yZGVyfVxyXG4gICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAge2l0ZW0ubmFtZX1cclxuICAgICAgICAgICAgICAgICAgPC9GaWx0ZXJMaW5rPlxyXG4gICAgICAgICAgICAgICAgPC9MaXN0Lkl0ZW0+XHJcbiAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgfX1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgPC9Db2w+XHJcbiAgICAgICAgPENvbCBzcGFuPXsxOH0+XHJcbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwicmVwb3MtdGl0bGVcIj57cmVwb3MudG90YWxfY291bnR95Liq5LuT5bqTPC9oMz5cclxuICAgICAgICAgIHtyZXBvcy5pdGVtcy5tYXAocmVwbyA9PiAoXHJcbiAgICAgICAgICAgIDxSZXBvIHJlcG89e3JlcG99IGtleT17cmVwby5pZH0gLz5cclxuICAgICAgICAgICkpfVxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYWdpbmF0aW9uXCI+XHJcbiAgICAgICAgICAgIDxQYWdpbmF0aW9uXHJcbiAgICAgICAgICAgICAgcGFnZVNpemU9e1BFUl9QQUdFfVxyXG4gICAgICAgICAgICAgIGN1cnJlbnQ9e051bWJlcihwYWdlKSB8fCAxfVxyXG4gICAgICAgICAgICAgIC8vIGdpdGh1YiBhcGnpmZDliLbor7fmsYLliY0xMDAw5p2hXHJcbiAgICAgICAgICAgICAgdG90YWw9e01hdGgubWluKHJlcG9zLnRvdGFsX2NvdW50LCAxMDAwKX1cclxuICAgICAgICAgICAgICAvLyDmiJHku6znlKh1cmzmnaXmjqfliLbliIbpobXvvIzmiYDku6XkuI3pnIDopoHov5nkuKpvbkNoYW5nZe+8jOS9huaYr+S4gOWumuimgeS8oFxyXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXsoKSA9PiB7fX1cclxuICAgICAgICAgICAgICBpdGVtUmVuZGVyPXsocmVuZGVyUGFnZSwgcmVuZGVyVHlwZSwgcmVuZGVyT2wpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldFBhZ2UgPVxyXG4gICAgICAgICAgICAgICAgICByZW5kZXJUeXBlID09PSAncGFnZScgPyByZW5kZXJQYWdlIDogcmVuZGVyVHlwZSA9PT0gJ3ByZXYnID8gcGFnZSAtIDEgOiBwYWdlICsgMTtcclxuXHJcbiAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0gcmVuZGVyVHlwZSA9PT0gJ3BhZ2UnID8gcmVuZGVyUGFnZSA6IHJlbmRlck9sO1xyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICAgIDxGaWx0ZXJMaW5rIHsuLi5yb3V0ZXIucXVlcnl9IHBhZ2U9e3RhcmdldFBhZ2V9PlxyXG4gICAgICAgICAgICAgICAgICAgIHtuYW1lfVxyXG4gICAgICAgICAgICAgICAgICA8L0ZpbHRlckxpbms+XHJcbiAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L0NvbD5cclxuICAgICAgPC9Sb3c+XHJcbiAgICAgIDxzdHlsZSBqc3g+XHJcbiAgICAgICAge2BcclxuICAgICAgICAgIDpnbG9iYWwoLmFudC1saXN0LWl0ZW0uc2VsZWN0ZWQpIHtcclxuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjZTM2MjA5O1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogMTAwO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLnJvb3Qge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAyMHB4IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAubGlzdC1oZWFkZXIge1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogODAwO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAucmVwb3MtdGl0bGUge1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogNTBweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5wYWdpbmF0aW9uIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTZweDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgYH1cclxuICAgICAgPC9zdHlsZT5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5TZWFyY2guZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKHsgY3R4IH0pID0+IHtcclxuICBjb25zb2xlLmxvZyhjdHgpO1xyXG4gIGNvbnN0IHsgcXVlcnksIHNvcnQsIGxhbmcsIG9yZGVyID0gJ2Rlc2MnLCBwYWdlIH0gPSBjdHgucXVlcnk7XHJcbiAgaWYgKCFxdWVyeSkgcmV0dXJuIHsgcmVwb3M6IHsgdG90YWxfY291bnQ6IDAgfSB9O1xyXG5cclxuICAvLyA/cT1yZWFjdCtsYW5ndWFnZTpqYXZhc2NyaXB0JnNvcnQ9c3RhcnMmb3JkZXI9ZGVzYyZwYWdlPTJcclxuICBsZXQgcXVlcnlTdHJpbmcgPSBgP3E9JHtxdWVyeX1gO1xyXG4gIGxhbmcgJiYgKHF1ZXJ5U3RyaW5nICs9IGArbGFuZ3VhZ2U6JHtsYW5nfWApO1xyXG4gIHNvcnQgJiYgKHF1ZXJ5U3RyaW5nICs9IGAmc29ydD0ke3NvcnR9Jm9yZGVyPSR7b3JkZXJ9YCk7XHJcbiAgcGFnZSAmJiAocXVlcnlTdHJpbmcgKz0gYCZwYWdlPSR7cGFnZX1gKTtcclxuXHJcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVxdWVzdChcclxuICAgIHtcclxuICAgICAgdXJsOiBgL3NlYXJjaC9yZXBvc2l0b3JpZXMke3F1ZXJ5U3RyaW5nfWAsXHJcbiAgICB9LFxyXG4gICAgY3R4LnJlcSxcclxuICAgIGN0eC5yZXNcclxuICApO1xyXG4gIHJldHVybiB7XHJcbiAgICByZXBvczogcmVzdWx0LmRhdGEsXHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoU2VhcmNoKTtcclxuIl19 */\\n/*@ sourceURL=E:\\\\\\\\MyGit\\\\\\\\github-demo\\\\\\\\pages\\\\\\\\search.jsx */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nSearch.getInitialProps = async ({\n  ctx\n}) => {\n  console.log(ctx);\n  const {\n    query,\n    sort,\n    lang,\n    order = 'desc',\n    page\n  } = ctx.query;\n  if (!query) return {\n    repos: {\n      total_count: 0\n    }\n  }; // ?q=react+language:javascript&sort=stars&order=desc&page=2\n\n  let queryString = `?q=${query}`;\n  lang && (queryString += `+language:${lang}`);\n  sort && (queryString += `&sort=${sort}&order=${order}`);\n  page && (queryString += `&page=${page}`);\n  const result = await request({\n    url: `/search/repositories${queryString}`\n  }, ctx.req, ctx.res);\n  return {\n    repos: result.data\n  };\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/search.jsx"],"names":["withRouter","classNames","Row","Col","List","Pagination","initCache","request","LANGUAGES","SORT_TYPES","PER_PAGE","FilterLink","Repo","genCacheKeyByQuery","cache","useCache","genCacheKeyStrate","context","ctx","query","Search","router","repos","sort","order","lang","page","marginBottom","langItem","selected","item","name","total_count","items","map","repo","id","Number","Math","min","renderPage","renderType","renderOl","targetPage","getInitialProps","console","log","queryString","result","url","req","res","data"],"mappings":"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","sourcesContent":["import { withRouter } from 'next/router';\r\nimport classNames from 'classnames';\r\nimport { Row, Col, List, Pagination } from 'antd';\r\nimport initCache from '../utils/client-cache';\r\nimport { request } from '../utils/api';\r\nimport { LANGUAGES, SORT_TYPES, PER_PAGE } from '../config';\r\nimport FilterLink from '../components/FilterLink';\r\nimport Repo from '../components/Repo';\r\nimport { genCacheKeyByQuery } from '../utils';\r\n\r\n/**\r\n * search条件：\r\n * sort: 排序方式\r\n * order: 排序升降顺序\r\n * lang: 仓库开发主语言\r\n * page: 分页\r\n */\r\n\r\nconst { cache, useCache } = initCache({\r\n  genCacheKeyStrate: context => genCacheKeyByQuery(context.ctx.query),\r\n});\r\n\r\nconst Search = ({ router, repos }) => {\r\n  const { query } = router;\r\n  const { sort, order, lang, page = 1 } = query;\r\n\r\n  useCache();\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Row gutter={20}>\r\n        <Col span={6}>\r\n          <List\r\n            bordered\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={LANGUAGES}\r\n            header={<span className=\"list-header\">语言</span>}\r\n            renderItem={langItem => {\r\n              const selected = lang === langItem;\r\n\r\n              return (\r\n                <List.Item className={selected ? 'selected' : null}>\r\n                  <FilterLink {...router.query} selected={selected} lang={langItem}>\r\n                    {langItem}\r\n                  </FilterLink>\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n          <List\r\n            bordered\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={SORT_TYPES}\r\n            header={<span className=\"list-header\">排序</span>}\r\n            renderItem={item => {\r\n              let selected = false;\r\n              // 1.当没有sort时，默认是BestMatch；2.有sort且有order(有默认值dest)时\r\n              if (\r\n                (item.name === 'Best Match' && !sort) ||\r\n                (item.sort === sort && item.order === order)\r\n              ) {\r\n                selected = true;\r\n              }\r\n              return (\r\n                <List.Item className={selected ? 'selected' : null}>\r\n                  <FilterLink\r\n                    {...router.query}\r\n                    selected={selected}\r\n                    sort={item.sort}\r\n                    order={item.order}\r\n                  >\r\n                    {item.name}\r\n                  </FilterLink>\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col span={18}>\r\n          <h3 className=\"repos-title\">{repos.total_count}个仓库</h3>\r\n          {repos.items.map(repo => (\r\n            <Repo repo={repo} key={repo.id} />\r\n          ))}\r\n          <div className=\"pagination\">\r\n            <Pagination\r\n              pageSize={PER_PAGE}\r\n              current={Number(page) || 1}\r\n              // github api限制请求前1000条\r\n              total={Math.min(repos.total_count, 1000)}\r\n              // 我们用url来控制分页，所以不需要这个onChange，但是一定要传\r\n              onChange={() => {}}\r\n              itemRender={(renderPage, renderType, renderOl) => {\r\n                const targetPage =\r\n                  renderType === 'page' ? renderPage : renderType === 'prev' ? page - 1 : page + 1;\r\n\r\n                const name = renderType === 'page' ? renderPage : renderOl;\r\n\r\n                return (\r\n                  <FilterLink {...router.query} page={targetPage}>\r\n                    {name}\r\n                  </FilterLink>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <style jsx>\r\n        {`\r\n          :global(.ant-list-item.selected) {\r\n            border-left: 2px solid #e36209;\r\n            font-weight: 100;\r\n          }\r\n          .root {\r\n            padding: 20px 0;\r\n          }\r\n          .list-header {\r\n            font-weight: 800;\r\n            font-size: 16px;\r\n          }\r\n          .repos-title {\r\n            border-bottom: 1px solid #eee;\r\n            font-size: 24px;\r\n            line-height: 50px;\r\n          }\r\n          .pagination {\r\n            margin-top: 16px;\r\n            text-align: right;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.getInitialProps = async ({ ctx }) => {\r\n  console.log(ctx);\r\n  const { query, sort, lang, order = 'desc', page } = ctx.query;\r\n  if (!query) return { repos: { total_count: 0 } };\r\n\r\n  // ?q=react+language:javascript&sort=stars&order=desc&page=2\r\n  let queryString = `?q=${query}`;\r\n  lang && (queryString += `+language:${lang}`);\r\n  sort && (queryString += `&sort=${sort}&order=${order}`);\r\n  page && (queryString += `&page=${page}`);\r\n\r\n  const result = await request(\r\n    {\r\n      url: `/search/repositories${queryString}`,\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n  return {\r\n    repos: result.data,\r\n  };\r\n};\r\n\r\nexport default withRouter(Search);\r\n"]},"metadata":{},"sourceType":"module"}