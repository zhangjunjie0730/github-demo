{"ast":null,"code":"import _regeneratorRuntime from \"E:/MyGit/github-demo/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:/MyGit/github-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\utils\\\\with-redux-app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport initializeStore from '../redux/store';\nvar isServer = false;\nvar __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\nfunction getOrCreateStore(initialState) {\n  if (isServer) {\n    // 服务端每次执行都重新创建一个store\n    return initializeStore(initialState);\n  } // 在客户端执行这个方法的时候 优先返回window上已有的store\n  // 而不能每次执行都重新创建一个store 否则状态就无限重置了\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default (function (Comp) {\n  var withReduxApp = /*#__PURE__*/function (_React$Component) {\n    _inherits(withReduxApp, _React$Component);\n\n    var _super = _createSuper(withReduxApp);\n\n    function withReduxApp(props) {\n      var _this;\n\n      _classCallCheck(this, withReduxApp);\n\n      _this = _super.call(this, props); // getInitialProps创建了store 这里为什么又重新创建一次？\n      // 因为服务端执行了getInitialProps之后 返回给客户端的是序列化后的字符串\n      // redux里有很多方法 不适合序列化存储\n      // 所以选择在getInitialProps返回initialReduxState初始的状态\n      // 再在这里通过initialReduxState去创建一个完整的store\n\n      _this.reduxStore = getOrCreateStore(props.initialReduxState);\n      return _this;\n    }\n\n    _createClass(withReduxApp, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            Component = _this$props.Component,\n            pageProps = _this$props.pageProps,\n            rest = _objectWithoutProperties(_this$props, [\"Component\", \"pageProps\"]);\n\n        return /*#__PURE__*/_jsxDEV(Comp, _objectSpread(_objectSpread({}, rest), {}, {\n          Component: Component,\n          pageProps: pageProps,\n          reduxStore: this.reduxStore\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this);\n      }\n    }]);\n\n    return withReduxApp;\n  }(React.Component); // 这个其实是_app.js的getInitialProps\n  // 在服务端渲染和客户端路由跳转时会被执行\n  // 所以非常适合做redux-store的初始化\n\n\n  withReduxApp.getInitialProps = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n      var reduxStore, req, session, appProps;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (isServer) {\n                req = ctx.ctx.req;\n                session = req.session;\n\n                if (session && session.userInfo) {\n                  reduxStore = getOrCreateStore({\n                    user: session.userInfo\n                  });\n                } else {\n                  reduxStore = getOrCreateStore();\n                }\n              } else {\n                reduxStore = getOrCreateStore();\n              }\n\n              ctx.reduxStore = reduxStore;\n              appProps = {};\n\n              if (!(typeof Comp.getInitialProps === 'function')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 6;\n              return Comp.getInitialProps(ctx);\n\n            case 6:\n              appProps = _context.sent;\n\n            case 7:\n              return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, appProps), {}, {\n                initialReduxState: reduxStore.getState()\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return withReduxApp;\n});","map":{"version":3,"sources":["E:/MyGit/github-demo/utils/with-redux-app.js"],"names":["React","initializeStore","isServer","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","Comp","withReduxApp","props","reduxStore","initialReduxState","Component","pageProps","rest","getInitialProps","ctx","req","session","userInfo","user","appProps","getState"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AAEA,IAAMC,QAAQ,QAAd;AACA,IAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC,MAAIH,QAAJ,EAAc;AACZ;AACA,WAAOD,eAAe,CAACI,YAAD,CAAtB;AACD,GAJqC,CAKtC;AACA;;;AACA,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AACjCG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BF,eAAe,CAACI,YAAD,CAA9C;AACD;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACD;;AAED,gBAAe,UAAAI,IAAI,EAAI;AAAA,MACfC,YADe;AAAA;;AAAA;;AAEnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN,EADiB,CAEjB;AACA;AACA;AACA;AACA;;AACA,YAAKC,UAAL,GAAkBN,gBAAgB,CAACK,KAAK,CAACE,iBAAP,CAAlC;AAPiB;AAQlB;;AAVkB;AAAA;AAAA,+BAYV;AAAA,0BACmC,KAAKF,KADxC;AAAA,YACCG,SADD,eACCA,SADD;AAAA,YACYC,SADZ,eACYA,SADZ;AAAA,YAC0BC,IAD1B;;AAEP,4BACE,QAAC,IAAD,kCAAUA,IAAV;AAAgB,UAAA,SAAS,EAAEF,SAA3B;AAAsC,UAAA,SAAS,EAAEC,SAAjD;AAA4D,UAAA,UAAU,EAAE,KAAKH;AAA7E;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;AAjBkB;;AAAA;AAAA,IACMV,KAAK,CAACY,SADZ,GAoBrB;AACA;AACA;;;AACAJ,EAAAA,YAAY,CAACO,eAAb;AAAA,wEAA+B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAG7B,kBAAId,QAAJ,EAAc;AAEHe,gBAAAA,GAFG,GAGRD,GAHQ,CAEVA,GAFU,CAEHC,GAFG;AAIJC,gBAAAA,OAJI,GAIQD,GAJR,CAIJC,OAJI;;AAKZ,oBAAIA,OAAO,IAAIA,OAAO,CAACC,QAAvB,EAAiC;AAC/BT,kBAAAA,UAAU,GAAGN,gBAAgB,CAAC;AAC5BgB,oBAAAA,IAAI,EAAEF,OAAO,CAACC;AADc,mBAAD,CAA7B;AAGD,iBAJD,MAIO;AACLT,kBAAAA,UAAU,GAAGN,gBAAgB,EAA7B;AACD;AACF,eAZD,MAYO;AACLM,gBAAAA,UAAU,GAAGN,gBAAgB,EAA7B;AACD;;AAEDY,cAAAA,GAAG,CAACN,UAAJ,GAAiBA,UAAjB;AAEIW,cAAAA,QArByB,GAqBd,EArBc;;AAAA,oBAsBzB,OAAOd,IAAI,CAACQ,eAAZ,KAAgC,UAtBP;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAuBVR,IAAI,CAACQ,eAAL,CAAqBC,GAArB,CAvBU;;AAAA;AAuB3BK,cAAAA,QAvB2B;;AAAA;AAAA,+EA2BxBA,QA3BwB;AA4B3BV,gBAAAA,iBAAiB,EAAED,UAAU,CAACY,QAAX;AA5BQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B;;AAAA;AAAA;AAAA;AAAA;;AAgCA,SAAOd,YAAP;AACD,CAxDD","sourcesContent":["import React from 'react';\r\nimport initializeStore from '../redux/store';\r\n\r\nconst isServer = typeof window === 'undefined';\r\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\r\n\r\nfunction getOrCreateStore(initialState) {\r\n  if (isServer) {\r\n    // 服务端每次执行都重新创建一个store\r\n    return initializeStore(initialState);\r\n  }\r\n  // 在客户端执行这个方法的时候 优先返回window上已有的store\r\n  // 而不能每次执行都重新创建一个store 否则状态就无限重置了\r\n  if (!window[__NEXT_REDUX_STORE__]) {\r\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\r\n  }\r\n  return window[__NEXT_REDUX_STORE__];\r\n}\r\n\r\nexport default Comp => {\r\n  class withReduxApp extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      // getInitialProps创建了store 这里为什么又重新创建一次？\r\n      // 因为服务端执行了getInitialProps之后 返回给客户端的是序列化后的字符串\r\n      // redux里有很多方法 不适合序列化存储\r\n      // 所以选择在getInitialProps返回initialReduxState初始的状态\r\n      // 再在这里通过initialReduxState去创建一个完整的store\r\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\r\n    }\r\n\r\n    render() {\r\n      const { Component, pageProps, ...rest } = this.props;\r\n      return (\r\n        <Comp {...rest} Component={Component} pageProps={pageProps} reduxStore={this.reduxStore} />\r\n      );\r\n    }\r\n  }\r\n\r\n  // 这个其实是_app.js的getInitialProps\r\n  // 在服务端渲染和客户端路由跳转时会被执行\r\n  // 所以非常适合做redux-store的初始化\r\n  withReduxApp.getInitialProps = async ctx => {\r\n    let reduxStore;\r\n\r\n    if (isServer) {\r\n      const {\r\n        ctx: { req },\r\n      } = ctx;\r\n      const { session } = req;\r\n      if (session && session.userInfo) {\r\n        reduxStore = getOrCreateStore({\r\n          user: session.userInfo,\r\n        });\r\n      } else {\r\n        reduxStore = getOrCreateStore();\r\n      }\r\n    } else {\r\n      reduxStore = getOrCreateStore();\r\n    }\r\n\r\n    ctx.reduxStore = reduxStore;\r\n\r\n    let appProps = {};\r\n    if (typeof Comp.getInitialProps === 'function') {\r\n      appProps = await Comp.getInitialProps(ctx);\r\n    }\r\n\r\n    return {\r\n      ...appProps,\r\n      initialReduxState: reduxStore.getState(),\r\n    };\r\n  };\r\n\r\n  return withReduxApp;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}