{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\search.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { withRouter } from 'next/router';\nimport classNames from 'classnames';\nimport { Row, Col, List, Pagination } from 'antd';\nimport initCache from '../utils/client-cache';\nimport { request } from '../utils/api';\nimport { LANGUAGES, SORT_TYPES, PER_PAGE } from '../config';\nimport FilterLink from '../components/FilterLink';\nimport Repo from '../components/Repo';\n/**\r\n * search条件：\r\n * sort: 排序方式\r\n * order: 排序升降顺序\r\n * lang: 仓库开发主语言\r\n * page: 分页\r\n */\n// const { cache, useCache } = initCache({\n//   genCacheKeyStrate: context => genCacheKeyStrate(context.ctx.query),\n// });\n\nconst Search = ({\n  router,\n  repos\n}) => {\n  const {\n    query\n  } = router;\n  const {\n    sort,\n    order,\n    lang,\n    page = 1\n  } = query;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jsx-2801659865\" + \" \" + \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 20,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          bordered: true,\n          style: {\n            marginBottom: 20\n          },\n          dataSource: LANGUAGES,\n          header: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"jsx-2801659865\" + \" \" + \"list-header\",\n            children: \"\\u8BED\\u8A00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this),\n          renderItem: language => {\n            const selected = lang === language;\n            return /*#__PURE__*/_jsxDEV(List.Item, {\n              className: classNames({\n                selected\n              }),\n              children: /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, router.query), {}, {\n                selected: selected,\n                lang: language,\n                children: language\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          bordered: true,\n          style: {\n            marginBottom: 20\n          },\n          dataSource: SORT_TYPES,\n          header: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"jsx-2801659865\" + \" \" + \"list-header\",\n            children: \"\\u6392\\u5E8F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this),\n          renderItem: sortItem => {\n            const {\n              name: itemName,\n              sort: itemSort,\n              order: itemOrder\n            } = sortItem;\n            let selected = false;\n\n            if (itemName === 'Best Match' && !sort) {\n              selected = true;\n            } else if (itemSort === sort && itemOrder === order) {\n              selected = true;\n            }\n\n            return /*#__PURE__*/_jsxDEV(List.Item, {\n              className: classNames({\n                selected\n              }),\n              children: /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, router.query), {}, {\n                selected: selected,\n                sort: itemSort,\n                order: itemOrder,\n                children: itemName\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 18,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"jsx-2801659865\" + \" \" + \"repos-title\",\n          children: [repos.total_count, \" \\u4E2A\\u4ED3\\u5E93\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), repos.items.map(repo => /*#__PURE__*/_jsxDEV(Repo, {\n          repo: repo\n        }, repo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jsx-2801659865\" + \" \" + \"pagination\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            pageSize: PER_PAGE,\n            current: Number(page) // github api限制请求前1000条\n            ,\n            total: Math.min(repos.total_count, 1000),\n            onChange: () => {},\n            itemRender: (renderPage, renderType, renderOl) => {\n              const targetPage = renderType === 'page' ? renderPage : renderType === 'prev' ? page - 1 : page + 1;\n              const name = renderType === 'page' ? renderPage : renderOl;\n              return /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, router.query), {}, {\n                page: targetPage,\n                children: name\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2801659865\",\n      children: \".ant-list-item.selected{border-left:2px solid #e36209;font-weight:100;}.root.jsx-2801659865{padding:20px 0;}.list-header.jsx-2801659865{font-weight:800;font-size:16px;}.repos-title.jsx-2801659865{border-bottom:1px solid #eee;font-size:24px;line-height:50px;}.pagination.jsx-2801659865{margin-top:16px;text-align:right;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6XFxNeUdpdFxcZ2l0aHViLWRlbW9cXHBhZ2VzXFxzZWFyY2guanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStHUyxBQUcyQyxBQUlmLEFBR0MsQUFJYSxBQUtiLGVBWGxCLENBR2lCLEFBU0UsYUFMRixDQVhDLENBUWxCLEVBU0EsV0FMbUIsRUFYbkIsZUFZQSIsImZpbGUiOiJFOlxcTXlHaXRcXGdpdGh1Yi1kZW1vXFxwYWdlc1xcc2VhcmNoLmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdpdGhSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcic7XHJcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xyXG5pbXBvcnQgeyBSb3csIENvbCwgTGlzdCwgUGFnaW5hdGlvbiB9IGZyb20gJ2FudGQnO1xyXG5pbXBvcnQgaW5pdENhY2hlIGZyb20gJy4uL3V0aWxzL2NsaWVudC1jYWNoZSc7XHJcbmltcG9ydCB7IHJlcXVlc3QgfSBmcm9tICcuLi91dGlscy9hcGknO1xyXG5pbXBvcnQgeyBMQU5HVUFHRVMsIFNPUlRfVFlQRVMsIFBFUl9QQUdFIH0gZnJvbSAnLi4vY29uZmlnJztcclxuaW1wb3J0IEZpbHRlckxpbmsgZnJvbSAnLi4vY29tcG9uZW50cy9GaWx0ZXJMaW5rJztcclxuaW1wb3J0IFJlcG8gZnJvbSAnLi4vY29tcG9uZW50cy9SZXBvJztcclxuXHJcbi8qKlxyXG4gKiBzZWFyY2jmnaHku7bvvJpcclxuICogc29ydDog5o6S5bqP5pa55byPXHJcbiAqIG9yZGVyOiDmjpLluo/ljYfpmY3pobrluo9cclxuICogbGFuZzog5LuT5bqT5byA5Y+R5Li76K+t6KiAXHJcbiAqIHBhZ2U6IOWIhumhtVxyXG4gKi9cclxuXHJcbi8vIGNvbnN0IHsgY2FjaGUsIHVzZUNhY2hlIH0gPSBpbml0Q2FjaGUoe1xyXG4vLyAgIGdlbkNhY2hlS2V5U3RyYXRlOiBjb250ZXh0ID0+IGdlbkNhY2hlS2V5U3RyYXRlKGNvbnRleHQuY3R4LnF1ZXJ5KSxcclxuLy8gfSk7XHJcblxyXG5jb25zdCBTZWFyY2ggPSAoeyByb3V0ZXIsIHJlcG9zIH0pID0+IHtcclxuICBjb25zdCB7IHF1ZXJ5IH0gPSByb3V0ZXI7XHJcbiAgY29uc3QgeyBzb3J0LCBvcmRlciwgbGFuZywgcGFnZSA9IDEgfSA9IHF1ZXJ5O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9XCJyb290XCI+XHJcbiAgICAgIDxSb3cgZ3V0dGVyPXsyMH0+XHJcbiAgICAgICAgPENvbCBzcGFuPXs2fT5cclxuICAgICAgICAgIDxMaXN0XHJcbiAgICAgICAgICAgIGJvcmRlcmVkXHJcbiAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpbkJvdHRvbTogMjAgfX1cclxuICAgICAgICAgICAgZGF0YVNvdXJjZT17TEFOR1VBR0VTfVxyXG4gICAgICAgICAgICBoZWFkZXI9ezxzcGFuIGNsYXNzTmFtZT1cImxpc3QtaGVhZGVyXCI+6K+t6KiAPC9zcGFuPn1cclxuICAgICAgICAgICAgcmVuZGVySXRlbT17bGFuZ3VhZ2UgPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkID0gbGFuZyA9PT0gbGFuZ3VhZ2U7XHJcblxyXG4gICAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8TGlzdC5JdGVtXHJcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyh7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQsXHJcbiAgICAgICAgICAgICAgICAgIH0pfVxyXG4gICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICA8RmlsdGVyTGluayB7Li4ucm91dGVyLnF1ZXJ5fSBzZWxlY3RlZD17c2VsZWN0ZWR9IGxhbmc9e2xhbmd1YWdlfT5cclxuICAgICAgICAgICAgICAgICAgICB7bGFuZ3VhZ2V9XHJcbiAgICAgICAgICAgICAgICAgIDwvRmlsdGVyTGluaz5cclxuICAgICAgICAgICAgICAgIDwvTGlzdC5JdGVtPlxyXG4gICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICAgPExpc3RcclxuICAgICAgICAgICAgYm9yZGVyZWRcclxuICAgICAgICAgICAgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAyMCB9fVxyXG4gICAgICAgICAgICBkYXRhU291cmNlPXtTT1JUX1RZUEVTfVxyXG4gICAgICAgICAgICBoZWFkZXI9ezxzcGFuIGNsYXNzTmFtZT1cImxpc3QtaGVhZGVyXCI+5o6S5bqPPC9zcGFuPn1cclxuICAgICAgICAgICAgcmVuZGVySXRlbT17c29ydEl0ZW0gPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnN0IHsgbmFtZTogaXRlbU5hbWUsIHNvcnQ6IGl0ZW1Tb3J0LCBvcmRlcjogaXRlbU9yZGVyIH0gPSBzb3J0SXRlbTtcclxuICAgICAgICAgICAgICBsZXQgc2VsZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICBpZiAoaXRlbU5hbWUgPT09ICdCZXN0IE1hdGNoJyAmJiAhc29ydCkge1xyXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbVNvcnQgPT09IHNvcnQgJiYgaXRlbU9yZGVyID09PSBvcmRlcikge1xyXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgPExpc3QuSXRlbVxyXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoe1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkLFxyXG4gICAgICAgICAgICAgICAgICB9KX1cclxuICAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgICAgPEZpbHRlckxpbmtcclxuICAgICAgICAgICAgICAgICAgICB7Li4ucm91dGVyLnF1ZXJ5fVxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkPXtzZWxlY3RlZH1cclxuICAgICAgICAgICAgICAgICAgICBzb3J0PXtpdGVtU29ydH1cclxuICAgICAgICAgICAgICAgICAgICBvcmRlcj17aXRlbU9yZGVyfVxyXG4gICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAge2l0ZW1OYW1lfVxyXG4gICAgICAgICAgICAgICAgICA8L0ZpbHRlckxpbms+XHJcbiAgICAgICAgICAgICAgICA8L0xpc3QuSXRlbT5cclxuICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICB9fVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICA8L0NvbD5cclxuICAgICAgICA8Q29sIHNwYW49ezE4fT5cclxuICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJyZXBvcy10aXRsZVwiPntyZXBvcy50b3RhbF9jb3VudH0g5Liq5LuT5bqTPC9oMz5cclxuICAgICAgICAgIHtyZXBvcy5pdGVtcy5tYXAocmVwbyA9PiAoXHJcbiAgICAgICAgICAgIDxSZXBvIHJlcG89e3JlcG99IGtleT17cmVwby5pZH0gLz5cclxuICAgICAgICAgICkpfVxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYWdpbmF0aW9uXCI+XHJcbiAgICAgICAgICAgIDxQYWdpbmF0aW9uXHJcbiAgICAgICAgICAgICAgcGFnZVNpemU9e1BFUl9QQUdFfVxyXG4gICAgICAgICAgICAgIGN1cnJlbnQ9e051bWJlcihwYWdlKX1cclxuICAgICAgICAgICAgICAvLyBnaXRodWIgYXBp6ZmQ5Yi26K+35rGC5YmNMTAwMOadoVxyXG4gICAgICAgICAgICAgIHRvdGFsPXtNYXRoLm1pbihyZXBvcy50b3RhbF9jb3VudCwgMTAwMCl9XHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9eygpID0+IHt9fVxyXG4gICAgICAgICAgICAgIGl0ZW1SZW5kZXI9eyhyZW5kZXJQYWdlLCByZW5kZXJUeXBlLCByZW5kZXJPbCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0UGFnZSA9XHJcbiAgICAgICAgICAgICAgICAgIHJlbmRlclR5cGUgPT09ICdwYWdlJyA/IHJlbmRlclBhZ2UgOiByZW5kZXJUeXBlID09PSAncHJldicgPyBwYWdlIC0gMSA6IHBhZ2UgKyAxO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSByZW5kZXJUeXBlID09PSAncGFnZScgPyByZW5kZXJQYWdlIDogcmVuZGVyT2w7XHJcblxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICAgICAgPEZpbHRlckxpbmsgey4uLnJvdXRlci5xdWVyeX0gcGFnZT17dGFyZ2V0UGFnZX0+XHJcbiAgICAgICAgICAgICAgICAgICAge25hbWV9XHJcbiAgICAgICAgICAgICAgICAgIDwvRmlsdGVyTGluaz5cclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvQ29sPlxyXG4gICAgICA8L1Jvdz5cclxuICAgICAgPHN0eWxlIGpzeD5cclxuICAgICAgICB7YFxyXG4gICAgICAgICAgOmdsb2JhbCguYW50LWxpc3QtaXRlbS5zZWxlY3RlZCkge1xyXG4gICAgICAgICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNlMzYyMDk7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAxMDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAucm9vdCB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDIwcHggMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5saXN0LWhlYWRlciB7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA4MDA7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5yZXBvcy10aXRsZSB7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiA1MHB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLnBhZ2luYXRpb24ge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxNnB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgICAgIH1cclxuICAgICAgICBgfVxyXG4gICAgICA8L3N0eWxlPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuXHJcblNlYXJjaC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyBjdHggfSkgPT4ge1xyXG4gIGNvbnN0IHsgcXVlcnksIHNvcnQsIGxhbmcsIG9yZGVyID0gJ2Rlc2MnLCBwYWdlIH0gPSBjdHgucXVlcnk7XHJcbiAgaWYgKCFxdWVyeSkgcmV0dXJuIHsgcmVwb3M6IHsgdG90YWxfY291bnQ6IDAgfSB9O1xyXG5cclxuICAvLyA/cT1yZWFjdCtsYW5ndWFnZTpqYXZhc2NyaXB0JnNvcnRcclxuICBsZXQgcXVlcnlTdHJpbmcgPSBgP3E9JHtxdWVyeX1gO1xyXG4gIGxhbmcgJiYgKHF1ZXJ5U3RyaW5nICs9IGArbGFuZ3VhZ2U6JHtsYW5nfWApO1xyXG4gIHNvcnQgJiYgKHF1ZXJ5U3RyaW5nICs9IGAmc29ydD0ke3NvcnR9Jm9yZGVyPSR7b3JkZXJ9YCk7XHJcbiAgcGFnZSAmJiAocXVlcnlTdHJpbmcgKz0gYCZwYWdlPSR7cGFnZX1gKTtcclxuXHJcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVxdWVzdChcclxuICAgIHtcclxuICAgICAgdXJsOiBgL3NlYXJjaC9yZXBvc2l0b3JpZXMke3F1ZXJ5U3RyaW5nfWAsXHJcbiAgICB9LFxyXG4gICAgY3R4LnJlcSxcclxuICAgIGN0eC5yZXNcclxuICApO1xyXG4gIHJldHVybiB7XHJcbiAgICByZXBvczogcmVzdWx0LmRhdGEsXHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoU2VhcmNoKTtcclxuIl19 */\\n/*@ sourceURL=E:\\\\\\\\MyGit\\\\\\\\github-demo\\\\\\\\pages\\\\\\\\search.jsx */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nSearch.getInitialProps = async ({\n  ctx\n}) => {\n  const {\n    query,\n    sort,\n    lang,\n    order = 'desc',\n    page\n  } = ctx.query;\n  if (!query) return {\n    repos: {\n      total_count: 0\n    }\n  }; // ?q=react+language:javascript&sort\n\n  let queryString = `?q=${query}`;\n  lang && (queryString += `+language:${lang}`);\n  sort && (queryString += `&sort=${sort}&order=${order}`);\n  page && (queryString += `&page=${page}`);\n  const result = await request({\n    url: `/search/repositories${queryString}`\n  }, ctx.req, ctx.res);\n  return {\n    repos: result.data\n  };\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/search.jsx"],"names":["withRouter","classNames","Row","Col","List","Pagination","initCache","request","LANGUAGES","SORT_TYPES","PER_PAGE","FilterLink","Repo","Search","router","repos","query","sort","order","lang","page","marginBottom","language","selected","sortItem","name","itemName","itemSort","itemOrder","total_count","items","map","repo","id","Number","Math","min","renderPage","renderType","renderOl","targetPage","getInitialProps","ctx","queryString","result","url","req","res","data"],"mappings":"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","sourcesContent":["import { withRouter } from 'next/router';\r\nimport classNames from 'classnames';\r\nimport { Row, Col, List, Pagination } from 'antd';\r\nimport initCache from '../utils/client-cache';\r\nimport { request } from '../utils/api';\r\nimport { LANGUAGES, SORT_TYPES, PER_PAGE } from '../config';\r\nimport FilterLink from '../components/FilterLink';\r\nimport Repo from '../components/Repo';\r\n\r\n/**\r\n * search条件：\r\n * sort: 排序方式\r\n * order: 排序升降顺序\r\n * lang: 仓库开发主语言\r\n * page: 分页\r\n */\r\n\r\n// const { cache, useCache } = initCache({\r\n//   genCacheKeyStrate: context => genCacheKeyStrate(context.ctx.query),\r\n// });\r\n\r\nconst Search = ({ router, repos }) => {\r\n  const { query } = router;\r\n  const { sort, order, lang, page = 1 } = query;\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Row gutter={20}>\r\n        <Col span={6}>\r\n          <List\r\n            bordered\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={LANGUAGES}\r\n            header={<span className=\"list-header\">语言</span>}\r\n            renderItem={language => {\r\n              const selected = lang === language;\r\n\r\n              return (\r\n                <List.Item\r\n                  className={classNames({\r\n                    selected,\r\n                  })}\r\n                >\r\n                  <FilterLink {...router.query} selected={selected} lang={language}>\r\n                    {language}\r\n                  </FilterLink>\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n          <List\r\n            bordered\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={SORT_TYPES}\r\n            header={<span className=\"list-header\">排序</span>}\r\n            renderItem={sortItem => {\r\n              const { name: itemName, sort: itemSort, order: itemOrder } = sortItem;\r\n              let selected = false;\r\n              if (itemName === 'Best Match' && !sort) {\r\n                selected = true;\r\n              } else if (itemSort === sort && itemOrder === order) {\r\n                selected = true;\r\n              }\r\n              return (\r\n                <List.Item\r\n                  className={classNames({\r\n                    selected,\r\n                  })}\r\n                >\r\n                  <FilterLink\r\n                    {...router.query}\r\n                    selected={selected}\r\n                    sort={itemSort}\r\n                    order={itemOrder}\r\n                  >\r\n                    {itemName}\r\n                  </FilterLink>\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col span={18}>\r\n          <h3 className=\"repos-title\">{repos.total_count} 个仓库</h3>\r\n          {repos.items.map(repo => (\r\n            <Repo repo={repo} key={repo.id} />\r\n          ))}\r\n          <div className=\"pagination\">\r\n            <Pagination\r\n              pageSize={PER_PAGE}\r\n              current={Number(page)}\r\n              // github api限制请求前1000条\r\n              total={Math.min(repos.total_count, 1000)}\r\n              onChange={() => {}}\r\n              itemRender={(renderPage, renderType, renderOl) => {\r\n                const targetPage =\r\n                  renderType === 'page' ? renderPage : renderType === 'prev' ? page - 1 : page + 1;\r\n\r\n                const name = renderType === 'page' ? renderPage : renderOl;\r\n\r\n                return (\r\n                  <FilterLink {...router.query} page={targetPage}>\r\n                    {name}\r\n                  </FilterLink>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <style jsx>\r\n        {`\r\n          :global(.ant-list-item.selected) {\r\n            border-left: 2px solid #e36209;\r\n            font-weight: 100;\r\n          }\r\n          .root {\r\n            padding: 20px 0;\r\n          }\r\n          .list-header {\r\n            font-weight: 800;\r\n            font-size: 16px;\r\n          }\r\n          .repos-title {\r\n            border-bottom: 1px solid #eee;\r\n            font-size: 24px;\r\n            line-height: 50px;\r\n          }\r\n          .pagination {\r\n            margin-top: 16px;\r\n            text-align: right;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.getInitialProps = async ({ ctx }) => {\r\n  const { query, sort, lang, order = 'desc', page } = ctx.query;\r\n  if (!query) return { repos: { total_count: 0 } };\r\n\r\n  // ?q=react+language:javascript&sort\r\n  let queryString = `?q=${query}`;\r\n  lang && (queryString += `+language:${lang}`);\r\n  sort && (queryString += `&sort=${sort}&order=${order}`);\r\n  page && (queryString += `&page=${page}`);\r\n\r\n  const result = await request(\r\n    {\r\n      url: `/search/repositories${queryString}`,\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n  return {\r\n    repos: result.data,\r\n  };\r\n};\r\n\r\nexport default withRouter(Search);\r\n"]},"metadata":{},"sourceType":"module"}