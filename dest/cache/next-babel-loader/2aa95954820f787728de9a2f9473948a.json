{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\components\\\\MyContainer\\\\index.jsx\",\n    _this = this;\n\nimport { cloneElement } from 'react';\nvar style = {\n  width: '100%',\n  maxWidth: 1200,\n  margin: '0 auto'\n}; // 通过这种方式能减少一个div标签，将container的属性集成在子组件的div上！\n\nexport default (function (_ref) {\n  var children = _ref.children,\n      _ref$renderer = _ref.renderer,\n      renderer = _ref$renderer === void 0 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 40\n  }, _this) : _ref$renderer;\n  console.log(renderer.props);\n  var newElement = /*#__PURE__*/cloneElement(renderer, {\n    style: Object.assign({}, renderer.props.style, style),\n    children: children\n  });\n  return newElement; // return <Comp style={style}>{children}</Comp>;\n});","map":{"version":3,"sources":["E:/MyGit/github-demo/components/MyContainer/index.jsx"],"names":["cloneElement","style","width","maxWidth","margin","children","renderer","console","log","props","newElement","Object","assign"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,OAA7B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,MADK;AAEZC,EAAAA,QAAQ,EAAE,IAFE;AAGZC,EAAAA,MAAM,EAAE;AAHI,CAAd,C,CAMA;;AACA,gBAAe,gBAAsC;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,2BAAzBC,QAAyB;AAAA,MAAzBA,QAAyB,2CAAd;AAAA;AAAA;AAAA;AAAA,WAAc;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,KAArB;AACA,MAAMC,UAAU,gBAAGV,YAAY,CAACM,QAAD,EAAW;AACxCL,IAAAA,KAAK,EAAEU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,QAAQ,CAACG,KAAT,CAAeR,KAAjC,EAAwCA,KAAxC,CADiC;AAExCI,IAAAA,QAAQ,EAARA;AAFwC,GAAX,CAA/B;AAIA,SAAOK,UAAP,CANmD,CAOnD;AACD,CARD","sourcesContent":["import { cloneElement } from 'react';\r\n\r\nconst style = {\r\n  width: '100%',\r\n  maxWidth: 1200,\r\n  margin: '0 auto',\r\n};\r\n\r\n// 通过这种方式能减少一个div标签，将container的属性集成在子组件的div上！\r\nexport default ({ children, renderer = <div /> }) => {\r\n  console.log(renderer.props);\r\n  const newElement = cloneElement(renderer, {\r\n    style: Object.assign({}, renderer.props.style, style),\r\n    children,\r\n  });\r\n  return newElement;\r\n  // return <Comp style={style}>{children}</Comp>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}