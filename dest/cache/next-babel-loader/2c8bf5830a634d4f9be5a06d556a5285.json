{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\nimport Layout from '../components/Layout';\nimport withRedux from '../utils/with-redux-app';\nimport PageLoading from '../components/PageLoading'; // Component对应pages的每个页面\n\nfunction MyApp(props) {\n  _s();\n\n  var Component = props.Component,\n      pageProps = props.pageProps,\n      reduxStore = props.reduxStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var startLoading = function startLoading() {\n    return setLoading(true);\n  };\n\n  var stopLoading = function stopLoading() {\n    return setLoading(false);\n  };\n\n  useEffect(function () {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    Router.events.on('routeChangeError', stopLoading);\n    return function () {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n      Router.events.off('routeChangeError', stopLoading);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: reduxStore,\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: [loading && /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"bp7W7BLZaxNmS0ceaCBH82+KoGQ=\");\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var Component, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = appContext.Component;\n            pageProps = {};\n\n            if (!Component.getInitialProps) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 5;\n            return Component.getInitialProps(appContext);\n\n          case 5:\n            pageProps = _context.sent;\n\n          case 6:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // class MyApp extends App {\n//   static async getInitialProps(ctx) {\n//     const { Component } = ctx;\n//     let pageProps = {};\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx);\n//     }\n//     // 返回给组件\n//     return {\n//       pageProps,\n//     };\n//   }\n//   state = {\n//     context: 'value',\n//     loading: false,\n//   };\n//   startLoading = () => {\n//     this.setState({\n//       loading: true,\n//     });\n//   };\n//   stopLoading = () => {\n//     this.setState({\n//       loading: false,\n//     });\n//   };\n//   componentDidMount() {\n//     Router.events.on('routeChangeStart', this.startLoading);\n//     Router.events.on('routeChangeComplete', this.stopLoading);\n//     Router.events.on('routeChangeError', this.stopLoading);\n//   }\n//   componentWillUnmount() {\n//     Router.events.off('routeChangeStart', this.startLoading);\n//     Router.events.off('routeChangeComplete', this.stopLoading);\n//     Router.events.off('routeChangeError', this.stopLoading);\n//   }\n//   render() {\n//     const { Component, pageProps, reduxStore } = this.props;\n//     return (\n//       <Provider store={reduxStore}>\n//         <Layout>\n//           {this.state.loading && <PageLoading />}\n//           <Component {...pageProps} />\n//         </Layout>\n//       </Provider>\n//     );\n//   }\n// }\n\n\nexport default _c2 = withRedux(MyApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/_app.js"],"names":["useEffect","useState","Provider","Router","Layout","withRedux","PageLoading","MyApp","props","Component","pageProps","reduxStore","loading","setLoading","startLoading","stopLoading","events","on","off","getInitialProps","appContext"],"mappings":"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","sourcesContent":["import 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\n\nimport Layout from '../components/Layout';\nimport withRedux from '../utils/with-redux-app';\nimport PageLoading from '../components/PageLoading';\n\n// Component对应pages的每个页面\nfunction MyApp(props) {\n  const { Component, pageProps, reduxStore } = props;\n\n  const [loading, setLoading] = useState(false);\n\n  const startLoading = () => setLoading(true);\n  const stopLoading = () => setLoading(false);\n\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    Router.events.on('routeChangeError', stopLoading);\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n      Router.events.off('routeChangeError', stopLoading);\n    };\n  });\n\n  return (\n    <Container>\n      <Provider store={reduxStore}>\n        <Layout>\n          {loading && <PageLoading />}\n          <Component {...pageProps} />\n        </Layout>\n      </Provider>\n    </Container>\n  );\n}\n\nMyApp.getInitialProps = async appContext => {\n  const { Component } = appContext;\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(appContext);\n  }\n\n  // 返回给组件\n  return { pageProps };\n};\n// class MyApp extends App {\n//   static async getInitialProps(ctx) {\n//     const { Component } = ctx;\n//     let pageProps = {};\n\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx);\n//     }\n\n//     // 返回给组件\n//     return {\n//       pageProps,\n//     };\n//   }\n\n//   state = {\n//     context: 'value',\n//     loading: false,\n//   };\n\n//   startLoading = () => {\n//     this.setState({\n//       loading: true,\n//     });\n//   };\n\n//   stopLoading = () => {\n//     this.setState({\n//       loading: false,\n//     });\n//   };\n\n//   componentDidMount() {\n//     Router.events.on('routeChangeStart', this.startLoading);\n//     Router.events.on('routeChangeComplete', this.stopLoading);\n//     Router.events.on('routeChangeError', this.stopLoading);\n//   }\n\n//   componentWillUnmount() {\n//     Router.events.off('routeChangeStart', this.startLoading);\n//     Router.events.off('routeChangeComplete', this.stopLoading);\n//     Router.events.off('routeChangeError', this.stopLoading);\n//   }\n\n//   render() {\n//     const { Component, pageProps, reduxStore } = this.props;\n//     return (\n//       <Provider store={reduxStore}>\n//         <Layout>\n//           {this.state.loading && <PageLoading />}\n//           <Component {...pageProps} />\n//         </Layout>\n//       </Provider>\n//     );\n//   }\n// }\n\nexport default withRedux(MyApp);\n"]},"metadata":{},"sourceType":"module"}