{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\nimport Layout from '../components/Layout';\nimport withRedux from '../utils/with-redux-app';\nimport PageLoading from '../components/PageLoading';\nimport Link from 'next/link';\nimport Index from './index';\nimport Detail from './detail';\nimport axios from 'axios'; // Component对应pages的每个页面\n\nfunction MyApp({\n  Component,\n  pageProps,\n  reduxStore\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const startLoading = () => setLoading(true);\n\n  const stopLoading = () => setLoading(false);\n\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    Router.events.on('routeChangeError', stopLoading);\n    axios.get();\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n      Router.events.off('routeChangeError', stopLoading);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: reduxStore,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [loading && /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n} // MyApp.getInitialProps = async ctx => {\n//   const { Component } = ctx;\n//   let pageProps = {};\n//   if (Component.getInitialProps) {\n//     pageProps = await Component.getInitialProps(ctx);\n//   }\n//   return { pageProps };\n// };\n\n\nexport default withRedux(MyApp);","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/_app.js"],"names":["useEffect","useState","Provider","Router","Layout","withRedux","PageLoading","Link","Index","Detail","axios","MyApp","Component","pageProps","reduxStore","loading","setLoading","startLoading","stopLoading","events","on","get","off"],"mappings":";;;;;;;;;AAAA,OAAO,oBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAf,EAAqD;AACnD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMgB,YAAY,GAAG,MAAMD,UAAU,CAAC,IAAD,CAArC;;AACA,QAAME,WAAW,GAAG,MAAMF,UAAU,CAAC,KAAD,CAApC;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACgB,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCH,YAArC;AACAd,IAAAA,MAAM,CAACgB,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCF,WAAxC;AACAf,IAAAA,MAAM,CAACgB,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCF,WAArC;AACAR,IAAAA,KAAK,CAACW,GAAN;AACA,WAAO,MAAM;AACXlB,MAAAA,MAAM,CAACgB,MAAP,CAAcG,GAAd,CAAkB,kBAAlB,EAAsCL,YAAtC;AACAd,MAAAA,MAAM,CAACgB,MAAP,CAAcG,GAAd,CAAkB,qBAAlB,EAAyCJ,WAAzC;AACAf,MAAAA,MAAM,CAACgB,MAAP,CAAcG,GAAd,CAAkB,kBAAlB,EAAsCJ,WAAtC;AACD,KAJD;AAKD,GAVQ,CAAT;AAYA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,UAAjB;AAAA,2BACE,QAAC,MAAD;AAAA,iBACGC,OAAO,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADd,eAEE,QAAC,SAAD,oBAAeF,SAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeR,SAAS,CAACM,KAAD,CAAxB","sourcesContent":["import 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\n\nimport Layout from '../components/Layout';\nimport withRedux from '../utils/with-redux-app';\nimport PageLoading from '../components/PageLoading';\nimport Link from 'next/link';\nimport Index from './index';\nimport Detail from './detail';\nimport axios from 'axios';\n\n// Component对应pages的每个页面\nfunction MyApp({ Component, pageProps, reduxStore }) {\n  const [loading, setLoading] = useState(false);\n\n  const startLoading = () => setLoading(true);\n  const stopLoading = () => setLoading(false);\n\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    Router.events.on('routeChangeError', stopLoading);\n    axios.get();\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n      Router.events.off('routeChangeError', stopLoading);\n    };\n  });\n\n  return (\n    <Provider store={reduxStore}>\n      <Layout>\n        {loading && <PageLoading />}\n        <Component {...pageProps} />\n      </Layout>\n    </Provider>\n  );\n}\n\n// MyApp.getInitialProps = async ctx => {\n//   const { Component } = ctx;\n//   let pageProps = {};\n//   if (Component.getInitialProps) {\n//     pageProps = await Component.getInitialProps(ctx);\n//   }\n//   return { pageProps };\n// };\n\nexport default withRedux(MyApp);\n"]},"metadata":{},"sourceType":"module"}