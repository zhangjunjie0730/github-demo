{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\nimport Layout from '../components/Layout';\nimport withReduxApp from '../utils/withReduxApp';\nimport PageLoading from '../components/PageLoading'; // Component对应pages的每个页面\n\nfunction MyApp(props) {\n  var Component = props.Component,\n      pageProps = props.pageProps,\n      reduxStore = props.reduxStore; // const [loading, setLoading] = useState(false);\n  // const startLoading = () => setLoading(true);\n  // const stopLoading = () => setLoading(false);\n  // useEffect(() => {\n  //   Router.events.on('routeChangeStart', startLoading);\n  //   Router.events.on('routeChangeComplete', stopLoading);\n  //   Router.events.on('routeChangeError', stopLoading);\n  //   return () => {\n  //     Router.events.off('routeChangeStart', startLoading);\n  //     Router.events.off('routeChangeComplete', stopLoading);\n  //     Router.events.off('routeChangeError', stopLoading);\n  //   };\n  // });\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: reduxStore,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [loading && /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var Component, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = appContext.Component;\n            pageProps = {};\n\n            if (!Component.getInitialProps) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 5;\n            return Component.getInitialProps(appContext);\n\n          case 5:\n            pageProps = _context.sent;\n\n          case 6:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withReduxApp(MyApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/_app.js"],"names":["useEffect","useState","Provider","Router","Layout","withReduxApp","PageLoading","MyApp","props","Component","pageProps","reduxStore","loading","getInitialProps","appContext"],"mappings":";;;;;;;;;;AAAA,OAAO,oBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,MACZC,SADY,GACyBD,KADzB,CACZC,SADY;AAAA,MACDC,SADC,GACyBF,KADzB,CACDE,SADC;AAAA,MACUC,UADV,GACyBH,KADzB,CACUG,UADV,EAGpB;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,UAAjB;AAAA,2BACE,QAAC,MAAD;AAAA,iBACGC,OAAO,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADd,eAEE,QAAC,SAAD,oBAAeF,SAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KA3BQH,K;;AA6BTA,KAAK,CAACM,eAAN;AAAA,sEAAwB,iBAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACdL,YAAAA,SADc,GACAK,UADA,CACdL,SADc;AAElBC,YAAAA,SAFkB,GAEN,EAFM;;AAAA,iBAIlBD,SAAS,CAACI,eAJQ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKFJ,SAAS,CAACI,eAAV,CAA0BC,UAA1B,CALE;;AAAA;AAKpBJ,YAAAA,SALoB;;AAAA;AAAA,6CAQf;AAAEA,cAAAA,SAAS,EAATA;AAAF,aARe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAWA,qBAAeL,YAAY,CAACE,KAAD,CAA3B","sourcesContent":["import 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport Router from 'next/router';\n\nimport Layout from '../components/Layout';\nimport withReduxApp from '../utils/withReduxApp';\nimport PageLoading from '../components/PageLoading';\n\n// Component对应pages的每个页面\nfunction MyApp(props) {\n  const { Component, pageProps, reduxStore } = props;\n\n  // const [loading, setLoading] = useState(false);\n\n  // const startLoading = () => setLoading(true);\n  // const stopLoading = () => setLoading(false);\n\n  // useEffect(() => {\n  //   Router.events.on('routeChangeStart', startLoading);\n  //   Router.events.on('routeChangeComplete', stopLoading);\n  //   Router.events.on('routeChangeError', stopLoading);\n  //   return () => {\n  //     Router.events.off('routeChangeStart', startLoading);\n  //     Router.events.off('routeChangeComplete', stopLoading);\n  //     Router.events.off('routeChangeError', stopLoading);\n  //   };\n  // });\n\n  return (\n    <Provider store={reduxStore}>\n      <Layout>\n        {loading && <PageLoading />}\n        <Component {...pageProps} />\n      </Layout>\n    </Provider>\n  );\n}\n\nMyApp.getInitialProps = async appContext => {\n  const { Component } = appContext;\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(appContext);\n  }\n\n  return { pageProps };\n};\n\nexport default withReduxApp(MyApp);\n"]},"metadata":{},"sourceType":"module"}