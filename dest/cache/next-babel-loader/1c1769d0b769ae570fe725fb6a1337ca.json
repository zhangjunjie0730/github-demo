{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\index.jsx\";\n\nimport React from \"react\";\nimport getConfig from 'next/config';\nimport { withRouter } from 'next/router';\nimport { request } from '../utils/api';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar Index = function Index(_ref) {\n  var ctx = _ref.ctx;\n  console.log('index.ctx', ctx);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"index\"));\n};\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, reduxStore, _reduxStore$getState, user, _yield$request, userRepos, _yield$request2, starred;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx, reduxStore = _ref2.reduxStore;\n            _reduxStore$getState = reduxStore.getState(), user = _reduxStore$getState.user;\n\n            if (!(!user || !user.id)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {});\n\n          case 4:\n            _context.next = 6;\n            return request({\n              url: '/user/repos'\n            }, ctx.req, ctx.res);\n\n          case 6:\n            _yield$request = _context.sent;\n            userRepos = _yield$request.data;\n            _context.next = 10;\n            return request({\n              url: '/user/starred'\n            }, ctx.req, ctx.res);\n\n          case 10:\n            _yield$request2 = _context.sent;\n            starred = _yield$request2.data;\n            return _context.abrupt(\"return\", {\n              userRepos: userRepos,\n              starred: starred\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // Index.getInitialProps = async context => {\n//   console.log('index页面的context', context);\n//   // const result = await api.request({ url: `/user/repos` }, ctx.req, ctx.res);\n//   // return {\n//   //   userRepos: result.data,\n//   //   ctx,\n//   // };\n//   return context;\n// };\n\n\nexport default withRouter(Index);","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/index.jsx"],"names":["getConfig","withRouter","request","publicRuntimeConfig","Index","ctx","console","log","getInitialProps","reduxStore","getState","user","id","url","req","res","userRepos","data","starred"],"mappings":";;;;;;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,OAAT,QAAwB,cAAxB;;iBAEgCF,SAAS,E;IAAjCG,mB,cAAAA,mB;;AAER,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF;AAKD,CAPD;;AAQAD,KAAK,CAACI,eAAN;AAAA,uEAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASH,YAAAA,GAAT,SAASA,GAAT,EAAcI,UAAd,SAAcA,UAAd;AAAA,mCACLA,UAAU,CAACC,QAAX,EADK,EACdC,IADc,wBACdA,IADc;;AAAA,kBAElB,CAACA,IAAD,IAAS,CAACA,IAAI,CAACC,EAFG;AAAA;AAAA;AAAA;;AAAA,6CAGb,EAHa;;AAAA;AAAA;AAAA,mBAMYV,OAAO,CACvC;AACEW,cAAAA,GAAG,EAAE;AADP,aADuC,EAIvCR,GAAG,CAACS,GAJmC,EAKvCT,GAAG,CAACU,GALmC,CANnB;;AAAA;AAAA;AAMRC,YAAAA,SANQ,kBAMdC,IANc;AAAA;AAAA,mBAcUf,OAAO,CACrC;AACEW,cAAAA,GAAG,EAAE;AADP,aADqC,EAIrCR,GAAG,CAACS,GAJiC,EAKrCT,GAAG,CAACU,GALiC,CAdjB;;AAAA;AAAA;AAcRG,YAAAA,OAdQ,mBAcdD,IAdc;AAAA,6CAqBf;AACLD,cAAAA,SAAS,EAATA,SADK;AAELE,cAAAA,OAAO,EAAPA;AAFK,aArBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAejB,UAAU,CAACG,KAAD,CAAzB","sourcesContent":["import getConfig from 'next/config';\r\nimport { withRouter } from 'next/router';\r\nimport { request } from '../utils/api';\r\n\r\nconst { publicRuntimeConfig } = getConfig();\r\n\r\nconst Index = ({ ctx }) => {\r\n  console.log('index.ctx', ctx);\r\n  return (\r\n    <>\r\n      <span>index</span>\r\n    </>\r\n  );\r\n};\r\nIndex.getInitialProps = async ({ ctx, reduxStore }) => {\r\n  const { user } = reduxStore.getState();\r\n  if (!user || !user.id) {\r\n    return {};\r\n  }\r\n\r\n  const { data: userRepos } = await request(\r\n    {\r\n      url: '/user/repos',\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n\r\n  const { data: starred } = await request(\r\n    {\r\n      url: '/user/starred',\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n  return {\r\n    userRepos,\r\n    starred,\r\n  };\r\n};\r\n// Index.getInitialProps = async context => {\r\n//   console.log('index页面的context', context);\r\n//   // const result = await api.request({ url: `/user/repos` }, ctx.req, ctx.res);\r\n//   // return {\r\n//   //   userRepos: result.data,\r\n//   //   ctx,\r\n//   // };\r\n//   return context;\r\n// };\r\n\r\nexport default withRouter(Index);\r\n"]},"metadata":{},"sourceType":"module"}