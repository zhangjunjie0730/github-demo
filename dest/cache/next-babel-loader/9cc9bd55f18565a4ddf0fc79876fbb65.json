{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\MyGit\\\\github-demo\\\\pages\\\\detail\\\\issues.jsx\",\n    _this = this;\n\nimport { request } from '../../utils/api';\n\nvar IssueDetail = function IssueDetail(_ref) {\n  var issues = _ref.issues;\n  console.log(issues);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"issues\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = IssueDetail;\n\nIssueDetail.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, _ctx$query, owner, name, result;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx;\n            _ctx$query = ctx.query, owner = _ctx$query.owner, name = _ctx$query.name;\n            _context.next = 4;\n            return request({\n              url: \"repos/\".concat(owner, \"/\").concat(name, \"/issues\")\n            }, ctx.req, ctx.res);\n\n          case 4:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              issues: result.data\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default IssueDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"IssueDetail\");","map":{"version":3,"sources":["E:/MyGit/github-demo/pages/detail/issues.jsx"],"names":["request","IssueDetail","issues","console","log","getInitialProps","ctx","query","owner","name","url","req","res","result","data"],"mappings":";;;;;;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAHD;;KAAMD,W;;AAKNA,WAAW,CAACI,eAAZ;AAAA,uEAA8B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT;AAAA,yBACJA,GAAG,CAACC,KADA,EACpBC,KADoB,cACpBA,KADoB,EACbC,IADa,cACbA,IADa;AAAA;AAAA,mBAEPT,OAAO,CAAC;AAAEU,cAAAA,GAAG,kBAAWF,KAAX,cAAoBC,IAApB;AAAL,aAAD,EAA2CH,GAAG,CAACK,GAA/C,EAAoDL,GAAG,CAACM,GAAxD,CAFA;;AAAA;AAEtBC,YAAAA,MAFsB;AAAA,6CAIrB;AACLX,cAAAA,MAAM,EAAEW,MAAM,CAACC;AADV,aAJqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AASA,eAAeb,WAAf","sourcesContent":["import { request } from '../../utils/api';\r\n\r\nconst IssueDetail = ({ issues }) => {\r\n  console.log(issues);\r\n  return <span>issues</span>;\r\n};\r\n\r\nIssueDetail.getInitialProps = async ({ ctx }) => {\r\n  const { owner, name } = ctx.query;\r\n  const result = await request({ url: `repos/${owner}/${name}/issues` }, ctx.req, ctx.res);\r\n\r\n  return {\r\n    issues: result.data,\r\n  };\r\n};\r\n\r\nexport default IssueDetail;\r\n"]},"metadata":{},"sourceType":"module"}